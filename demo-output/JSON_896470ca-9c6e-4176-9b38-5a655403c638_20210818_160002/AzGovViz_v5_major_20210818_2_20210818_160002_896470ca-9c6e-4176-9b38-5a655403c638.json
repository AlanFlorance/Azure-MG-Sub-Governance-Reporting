{
  "Tenant": {
    "TenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
    "RoleAssignments": {
      "/providers/Microsoft.Authorization/roleAssignments/0c3ffd6f-942d-433d-8abd-2d0d7f4383e1": {
        "RoleAssignmentId": "/providers/Microsoft.Authorization/roleAssignments/0c3ffd6f-942d-433d-8abd-2d0d7f4383e1",
        "Scope": "/",
        "DisplayName": "Joe Dalton",
        "SignInName": "joe.dalton@AzGovViz.onmicrosoft.com",
        "RoleDefinitionName": "User Access Administrator",
        "RoleDefinitionId": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
        "ObjectId": "acf4c68f-7b15-4d70-935b-26116fc2426a",
        "ObjectType": "User",
        "CanDelegate": false,
        "Description": null,
        "ConditionVersion": null,
        "Condition": null
      },
      "/providers/Microsoft.Authorization/roleAssignments/6c236776-529f-4132-b034-e399e1cd1a99": {
        "RoleAssignmentId": "/providers/Microsoft.Authorization/roleAssignments/6c236776-529f-4132-b034-e399e1cd1a99",
        "Scope": "/",
        "DisplayName": "ESDeploymentAccount",
        "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
        "RoleDefinitionName": "Owner",
        "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
        "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
        "ObjectType": "User",
        "CanDelegate": false,
        "Description": null,
        "ConditionVersion": null,
        "Condition": null
      }
    },
    "ManagementGroups": {
      "896470ca-9c6e-4176-9b38-5a655403c638": {
        "MgId": "896470ca-9c6e-4176-9b38-5a655403c638",
        "MgName": "Tenant Root Group",
        "mgParentId": "TenantRoot",
        "mgParentName": "TenantRoot",
        "level": "0",
        "PolicyDefinitionsCustom": {},
        "PolicySetDefinitionsCustom": {},
        "BlueprintDefinitions": {},
        "PolicyAssignments": {},
        "RoleAssignments": {
          "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/2df03e9d-a1e3-41f5-a95e-efb2b4641f04": {
            "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/2df03e9d-a1e3-41f5-a95e-efb2b4641f04",
            "Scope": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638",
            "DisplayName": "Jack Dalton",
            "SignInName": "JackDalton@AzGovViz.onmicrosoft.com",
            "RoleDefinitionName": "Reader",
            "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "ObjectId": "c64d2776-a210-428f-b54f-a4a5dd7f8ef8",
            "ObjectType": "User",
            "CanDelegate": false,
            "Description": null,
            "ConditionVersion": null,
            "Condition": null
          },
          "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/30e36b53-bc6c-412b-a026-96fe7527e27b": {
            "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/30e36b53-bc6c-412b-a026-96fe7527e27b",
            "Scope": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638",
            "DisplayName": "AzOps",
            "SignInName": null,
            "RoleDefinitionName": "Owner",
            "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "ObjectId": "c295384a-33d9-475e-abaf-d2fb0274299a",
            "ObjectType": "ServicePrincipal",
            "CanDelegate": false,
            "Description": null,
            "ConditionVersion": null,
            "Condition": null
          },
          "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/d7973c31-e58a-4af7-bbcb-a4bac69ba141": {
            "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/d7973c31-e58a-4af7-bbcb-a4bac69ba141",
            "Scope": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638",
            "DisplayName": "azgovvizwwcsecurity",
            "SignInName": null,
            "RoleDefinitionName": "Reader",
            "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "ObjectId": "e261446e-77d2-4cf5-a32a-0fbef8ee1333",
            "ObjectType": "ServicePrincipal",
            "CanDelegate": false,
            "Description": null,
            "ConditionVersion": null,
            "Condition": null
          },
          "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/eda95ae6-8581-4558-b3b9-b3cd05cce33d": {
            "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638/providers/Microsoft.Authorization/roleAssignments/eda95ae6-8581-4558-b3b9-b3cd05cce33d",
            "Scope": "/providers/Microsoft.Management/managementGroups/896470ca-9c6e-4176-9b38-5a655403c638",
            "DisplayName": "Joe Dalton",
            "SignInName": "joe.dalton@AzGovViz.onmicrosoft.com",
            "RoleDefinitionName": "Owner",
            "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "ObjectId": "acf4c68f-7b15-4d70-935b-26116fc2426a",
            "ObjectType": "User",
            "CanDelegate": false,
            "Description": null,
            "ConditionVersion": null,
            "Condition": null
          }
        },
        "DiagnosticSettings": {},
        "Subscriptions": {},
        "ManagementGroups": {
          "ESJH": {
            "MgId": "ESJH",
            "MgName": "ESJH",
            "mgParentId": "896470ca-9c6e-4176-9b38-5a655403c638",
            "mgParentName": "Tenant Root Group",
            "level": "1",
            "PolicyDefinitionsCustom": {
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/append-kv-softdelete": {
                "properties": {
                  "displayName": "KeyVault SoftDelete should be enabled",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Key Vault",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.492565Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {},
                  "policyRule": {
                    "if": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.KeyVault/vaults"
                            },
                            {
                              "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                              "notEquals": false
                            }
                          ]
                        }
                      ]
                    },
                    "then": {
                      "effect": "append",
                      "details": [
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "value": true
                        }
                      ]
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Append-KV-SoftDelete"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-aa-child-resources": {
                "properties": {
                  "displayName": "No child resources in Automation Account",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies the creation of child resources on the Automation Account",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Automation",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3290136Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "in": [
                            "Microsoft.Automation/automationAccounts/runbooks",
                            "Microsoft.Automation/automationAccounts/variables",
                            "Microsoft.Automation/automationAccounts/modules",
                            "Microsoft.Automation/automationAccounts/credentials",
                            "Microsoft.Automation/automationAccounts/connections",
                            "Microsoft.Automation/automationAccount/certificates"
                          ]
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-AA-child-resources"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-appgw-without-waf": {
                "properties": {
                  "displayName": "Application Gateway should be deployed with WAF enabled",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy enables you to restrict that Application Gateways is always deployed with WAF enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3346641Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/applicationGateways"
                        },
                        {
                          "field": "Microsoft.Network/applicationGateways/sku.name",
                          "notequals": "WAF_v2"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-AppGW-Without-WAF"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-erpeering": {
                "properties": {
                  "displayName": "Deny vNet peering ",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies the creation of vNet Peerings under the assigned scope.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.6692035Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-ERPeering",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-ERPeering"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-private-dns-zones": {
                "properties": {
                  "displayName": "Deny the creation of private DNS",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.590183Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/privateDnsZones"
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-Private-DNS-Zones"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-aks": {
                "properties": {
                  "displayName": "Public network access on AKS API should be disabled",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies  the creation of  Azure Kubernetes Service non-private clusters",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Kubernetes",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4994662Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.ContainerService/managedClusters"
                        },
                        {
                          "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                          "notequals": "true"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-Aks"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-cosmosdb": {
                "properties": {
                  "displayName": "Public network access should be disabled for CosmosDB",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies that  Cosmos database accounts  are created with out public network access is disabled.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.8995781Z",
                    "updatedBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
                    "updatedOn": "2021-07-15T15:15:07.6208973Z"
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of this policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.DocumentDB/databaseAccounts"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                          "notequals": "Disabled"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-CosmosDB"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-keyvault": {
                "properties": {
                  "displayName": "Public network access should be disabled for KeyVault",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Key Vault",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4941318Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.KeyVault/vaults"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                          "notequals": "Deny"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-KeyVault"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-mariadb": {
                "properties": {
                  "displayName": "Public network access should be disabled for MariaDB",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies the creation of Maria DB accounts with exposed public endpoints",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3939506Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.DBforMariaDB/servers"
                        },
                        {
                          "field": "Microsoft.DBforMariaDB/servers/publicNetworkAccess",
                          "notequals": "Disabled"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-MariaDB"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-mysql": {
                "properties": {
                  "displayName": "Public network access should be disabled for MySQL",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies creation of MySql DB accounts with exposed public endpoints",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5154942Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.DBforMySQL/servers"
                        },
                        {
                          "field": "Microsoft.DBforMySQL/servers/publicNetworkAccess",
                          "notequals": "Disabled"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-MySQL"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-postgresql": {
                "properties": {
                  "displayName": "Public network access should be disabled for PostgreSql",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies creation of Postgre SQL DB accounts with exposed public endpoints",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4731381Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.DBforPostgreSQL/servers"
                        },
                        {
                          "field": "Microsoft.DBforPostgreSQL/servers/publicNetworkAccess",
                          "notequals": "Disabled"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-PostgreSql"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-sql": {
                "properties": {
                  "displayName": "Public network access on Azure SQL Database should be disabled",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies creation of Sql servers with exposed public endpoints",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5127467Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Sql/servers"
                        },
                        {
                          "field": "Microsoft.Sql/servers/publicNetworkAccess",
                          "notequals": "Disabled"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-Sql"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicendpoint-storage": {
                "properties": {
                  "displayName": "Public network access onStorage accounts should be disabled",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Storage",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4973149Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Storage/storageAccounts"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                          "notequals": "Deny"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicEndpoint-Storage"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-publicip": {
                "properties": {
                  "displayName": "Deny the creation of public IP",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies creation of Public IPs under the assigned scope.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5671925Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/publicIPAddresses"
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-PublicIP"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-rdp-from-internet": {
                "properties": {
                  "displayName": "RDP access from the Internet should be blocked",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies any network security rule that allows RDP access from Internet",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.669552Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                              "equals": "Allow"
                            },
                            {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                              "equals": "Inbound"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                                  "equals": "*"
                                },
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                                  "equals": "3389"
                                },
                                {
                                  "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389)), 'false')]",
                                  "equals": "true"
                                },
                                {
                                  "count": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                    "where": {
                                      "value": "[if(and(not(empty(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')))), contains(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')),'-')), and(lessOrEquals(int(first(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389),greaterOrEquals(int(last(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389)) , 'false')]",
                                      "equals": "true"
                                    }
                                  },
                                  "greater": 0
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                    "notEquals": "*"
                                  }
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                    "notEquals": "3389"
                                  }
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                                  "equals": "*"
                                },
                                {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                                  "equals": "Internet"
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                    "notEquals": "*"
                                  }
                                },
                                {
                                  "not": {
                                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                    "notEquals": "Internet"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-RDP-From-Internet"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deny-subnet-without-nsg": {
                "properties": {
                  "displayName": "Subnets should have a Network Security Group ",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy denies the creation of a subsnet with out an Network Security Group. NSG help to protect traffic across subnet-level.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4698877Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/virtualNetworks/subnets"
                        },
                        {
                          "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                          "exists": "false"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]"
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deny-Subnet-Without-Nsg"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-asc-standard": {
                "properties": {
                  "displayName": "Deploy Azure Defender settings in Azure Security Center.",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys  the Azure Defender settings in Azure Security Center for  the specific services.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Security Center",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5472725Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "pricingTierVMs": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierVMs",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierSqlServers": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierSqlServers",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierAppServices": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierAppServices",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierStorageAccounts": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierStorageAccounts",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierContainerRegistry": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierContainerRegistry",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierKeyVaults": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierKeyVaults",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierKubernetesService": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierKubernetesService",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierDns": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierDns",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "pricingTierArm": {
                      "type": "String",
                      "metadata": {
                        "displayName": "pricingTierArm",
                        "description": null
                      },
                      "allowedValues": [
                        "Standard",
                        "Free"
                      ],
                      "defaultValue": "Standard"
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Security/pricings",
                        "deploymentScope": "subscription",
                        "existenceScope": "subscription",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                        ],
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Security/pricings/pricingTier",
                              "equals": "Standard"
                            },
                            {
                              "field": "type",
                              "equals": "Microsoft.Security/pricings"
                            }
                          ]
                        },
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "pricingTierVMs": {
                                "value": "[parameters('pricingTierVMs')]"
                              },
                              "pricingTierSqlServers": {
                                "value": "[parameters('pricingTierSqlServers')]"
                              },
                              "pricingTierAppServices": {
                                "value": "[parameters('pricingTierAppServices')]"
                              },
                              "pricingTierStorageAccounts": {
                                "value": "[parameters('pricingTierStorageAccounts')]"
                              },
                              "pricingTierContainerRegistry": {
                                "value": "[parameters('pricingTierContainerRegistry')]"
                              },
                              "pricingTierKeyVaults": {
                                "value": "[parameters('pricingTierKeyVaults')]"
                              },
                              "pricingTierKubernetesService": {
                                "value": "[parameters('pricingTierKubernetesService')]"
                              },
                              "pricingTierDns": {
                                "value": "[parameters('pricingTierDns')]"
                              },
                              "pricingTierArm": {
                                "value": "[parameters('pricingTierArm')]"
                              }
                            },
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "pricingTierVMs": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "pricingTierVMs"
                                  }
                                },
                                "pricingTierSqlServers": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "pricingTierSqlServers"
                                  }
                                },
                                "pricingTierAppServices": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "pricingTierAppServices"
                                  }
                                },
                                "pricingTierStorageAccounts": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "pricingTierStorageAccounts"
                                  }
                                },
                                "pricingTierContainerRegistry": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "ContainerRegistry"
                                  }
                                },
                                "pricingTierKeyVaults": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "KeyVaults"
                                  }
                                },
                                "pricingTierKubernetesService": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "KubernetesService"
                                  }
                                },
                                "pricingTierDns": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "KubernetesService"
                                  }
                                },
                                "pricingTierArm": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "KubernetesService"
                                  }
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "VirtualMachines",
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierVMs')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "StorageAccounts",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/VirtualMachines')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierStorageAccounts')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "AppServices",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/StorageAccounts')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierAppServices')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "SqlServers",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/AppServices')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierSqlServers')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "KeyVaults",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/SqlServers')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierKeyVaults')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "KubernetesService",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/KeyVaults')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierKubernetesService')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "ContainerRegistry",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/KubernetesService')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierContainerRegistry')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "Dns",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/ContainerRegistry')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierDns')]"
                                  }
                                },
                                {
                                  "type": "Microsoft.Security/pricings",
                                  "apiVersion": "2018-06-01",
                                  "name": "Arm",
                                  "dependsOn": [
                                    "[concat('Microsoft.Security/pricings/Dns')]"
                                  ],
                                  "properties": {
                                    "pricingTier": "[parameters('pricingTierArm')]"
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Standard",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-ASC-Standard"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-budget": {
                "properties": {
                  "displayName": "Deploy a default budget on subscriptions",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Depoloys a default budget on subscriptions.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Budget",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4777959Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "amount": {
                      "type": "String",
                      "metadata": {
                        "description": "The total amount of cost or usage to track with the budget"
                      },
                      "defaultValue": "1000"
                    },
                    "timeGrain": {
                      "type": "String",
                      "metadata": {
                        "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
                      },
                      "allowedValues": [
                        "Monthly",
                        "Quarterly",
                        "Annually",
                        "BillingMonth",
                        "BillingQuarter",
                        "BillingAnnual"
                      ],
                      "defaultValue": "Monthly"
                    },
                    "firstThreshold": {
                      "type": "String",
                      "metadata": {
                        "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                      },
                      "defaultValue": "90"
                    },
                    "secondThreshold": {
                      "type": "String",
                      "metadata": {
                        "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                      },
                      "defaultValue": "100"
                    },
                    "contactRoles": {
                      "type": "Array",
                      "metadata": {
                        "description": "The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."
                      },
                      "defaultValue": [
                        "Owner",
                        "Contributor"
                      ]
                    },
                    "contactEmails": {
                      "type": "Array",
                      "metadata": {
                        "description": "The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."
                      },
                      "defaultValue": []
                    },
                    "contactGroups": {
                      "type": "Array",
                      "metadata": {
                        "description": "The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."
                      },
                      "defaultValue": []
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "DeployIfNotExists",
                      "details": {
                        "type": "Microsoft.Consumption/budgets",
                        "deploymentScope": "Subscription",
                        "existenceScope": "Subscription",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Consumption/budgets/amount",
                              "equals": "[parameters('amount')]"
                            },
                            {
                              "field": "Microsoft.Consumption/budgets/timeGrain",
                              "equals": "[parameters('timeGrain')]"
                            },
                            {
                              "field": "Microsoft.Consumption/budgets/category",
                              "equals": "Cost"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                        ],
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "amount": {
                                "value": "[parameters('amount')]"
                              },
                              "timeGrain": {
                                "value": "[parameters('timeGrain')]"
                              },
                              "firstThreshold": {
                                "value": "[parameters('firstThreshold')]"
                              },
                              "secondThreshold": {
                                "value": "[parameters('secondThreshold')]"
                              },
                              "contactEmails": {
                                "value": "[parameters('contactEmails')]"
                              },
                              "contactRoles": {
                                "value": "[parameters('contactRoles')]"
                              },
                              "contactGroups": {
                                "value": "[parameters('contactGroups')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "amount": {
                                  "type": "string"
                                },
                                "timeGrain": {
                                  "type": "string"
                                },
                                "firstThreshold": {
                                  "type": "string"
                                },
                                "secondThreshold": {
                                  "type": "string"
                                },
                                "contactEmails": {
                                  "type": "array"
                                },
                                "contactRoles": {
                                  "type": "array"
                                },
                                "contactGroups": {
                                  "type": "array"
                                },
                                "startDate": {
                                  "type": "string",
                                  "defaultValue": "[concat(utcNow('MM'), '/01/', utcNow('yyyy'))]"
                                }
                              },
                              "resources": [
                                {
                                  "type": "Microsoft.Consumption/budgets",
                                  "apiVersion": "2019-10-01",
                                  "name": "default-sandbox-budget",
                                  "properties": {
                                    "timePeriod": {
                                      "startDate": "[parameters('startDate')]"
                                    },
                                    "timeGrain": "[parameters('timeGrain')]",
                                    "amount": "[parameters('amount')]",
                                    "category": "Cost",
                                    "notifications": {
                                      "NotificationForExceededBudget1": {
                                        "enabled": true,
                                        "operator": "GreaterThan",
                                        "threshold": "[parameters('firstThreshold')]",
                                        "contactEmails": "[parameters('contactEmails')]",
                                        "contactRoles": "[parameters('contactRoles')]",
                                        "contactGroups": "[parameters('contactGroups')]"
                                      },
                                      "NotificationForExceededBudget2": {
                                        "enabled": true,
                                        "operator": "GreaterThan",
                                        "threshold": "[parameters('secondThreshold')]",
                                        "contactEmails": "[parameters('contactEmails')]",
                                        "contactRoles": "[parameters('contactRoles')]",
                                        "contactGroups": "[parameters('contactGroups')]"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Budget"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-ddosprotection": {
                "properties": {
                  "displayName": "Deploy an Azure DDoS Protection Standard plan",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys an Azure DDoS Protection Standard plan",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.6588825Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "ddosName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "ddosName",
                        "description": "Name of the Virtual WAN"
                      }
                    },
                    "ddosRegion": {
                      "type": "String",
                      "metadata": {
                        "displayName": "ddosRegion",
                        "description": "Select Azure region for Virtual WAN",
                        "strongType": "location"
                      }
                    },
                    "rgName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "rgName",
                        "description": "Provide name for resource group."
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/ddosProtectionPlans",
                        "deploymentScope": "Subscription",
                        "existenceScope": "ResourceGroup",
                        "resourceGroupName": "[parameters('rgName')]",
                        "name": "[parameters('ddosName')]",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                        ],
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "rgName": {
                                "value": "[parameters('rgName')]"
                              },
                              "ddosname": {
                                "value": "[parameters('ddosname')]"
                              },
                              "ddosregion": {
                                "value": "[parameters('ddosRegion')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "rgName": {
                                  "type": "string"
                                },
                                "ddosname": {
                                  "type": "string"
                                },
                                "ddosRegion": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/resourceGroups",
                                  "apiVersion": "2018-05-01",
                                  "name": "[parameters('rgName')]",
                                  "location": "[deployment().location]",
                                  "properties": {}
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2018-05-01",
                                  "name": "ddosprotection",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Network/ddosProtectionPlans",
                                          "apiVersion": "2019-12-01",
                                          "name": "[parameters('ddosName')]",
                                          "location": "[parameters('ddosRegion')]",
                                          "properties": {}
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-DDoSProtection"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-aa": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Automation to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.1308417Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Automation/automationAccounts"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "timeGrain": null,
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "enabled": false,
                                          "days": 0
                                        }
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "JobLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "JobStreams",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DscNodeStatus",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-AA"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-aci": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5001774Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.ContainerInstance/containerGroups"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-ACI"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-acr": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4946313Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.ContainerRegistry/registries"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.ContainerRegistry/registries/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "ContainerRegistryLoginEvents",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "ContainerRegistryRepositoryEvents",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-ACR"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-activitylog": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Activity Log to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Activity Log to stream to a Log Analytics workspace when any Activity Log which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with category enabled.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.6402081Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Primary Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "deploymentScope": "Subscription",
                        "existenceScope": "Subscription",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "name": "subscriptionToLa",
                                  "type": "Microsoft.Insights/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "location": "Global",
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "logs": [
                                      {
                                        "category": "Administrative",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Security",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "ServiceHealth",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Alert",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Recommendation",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Policy",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Autoscale",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "ResourceHealth",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ]
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-ActivityLog"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-aks": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:37.7897371Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.ContainerService/managedClusters"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.ContainerService/managedClusters/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "kube-audit",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "kube-apiserver",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "kube-controller-manager",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "kube-scheduler",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "cluster-autoscaler",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "guard",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "kube-audit-admin",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-AKS"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-analysisservice": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:37.7843307Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.AnalysisServices/servers"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.AnalysisServices/servers/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Engine",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Service",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-AnalysisService"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-apimgmt": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for API Management to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.474291Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.ApiManagement/service"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.ApiManagement/service/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "Gateway Requests",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      },
                                      {
                                        "category": "Capacity",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      },
                                      {
                                        "category": "EventHub Events",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      },
                                      {
                                        "category": "Network Status",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "GatewayLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-APIMgmt"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-applicationgateway": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.7398799Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/applicationGateways"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "ApplicationGatewayAccessLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "ApplicationGatewayPerformanceLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "ApplicationGatewayFirewallLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-ApplicationGateway"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-batch": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Batch to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5031507Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Batch/batchAccounts"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Batch/batchAccounts/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "ServiceLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-Batch"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-cdnendpoints": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4860295Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Cdn/profiles/endpoints"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [],
                                    "logs": [
                                      {
                                        "category": "CoreAnalytics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('fullName')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-CDNEndpoints"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-cognitiveservices": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5078731Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.CognitiveServices/accounts"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.CognitiveServices/accounts/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Audit",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "RequestResponse",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Trace",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-CognitiveServices"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-cosmosdb": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5196791Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.DocumentDB/databaseAccounts"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "Requests",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "DataPlaneRequests",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "MongoRequests",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "QueryRuntimeStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "PartitionKeyStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "PartitionKeyRUConsumption",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "ControlPlaneRequests",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "CassandraRequests",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "GremlinRequests",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-CosmosDB"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-databricks": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Databricks to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.539725Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Databricks/workspaces"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Databricks/workspaces/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "logs": [
                                      {
                                        "category": "dbfs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "clusters",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "accounts",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "jobs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "notebook",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "ssh",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "workspace",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "secrets",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "sqlPermissions",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "instancePools",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-Databricks"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-datafactory": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.506043Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.DataFactory/factories"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.DataFactory/factories/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "ActivityRuns",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "PipelineRuns",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "TriggerRuns",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SSISPackageEventMessages",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SSISPackageExecutableStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SSISPackageEventMessageContext",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SSISPackageExecutionComponentPhases",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SSISPackageExecutionDataStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SSISIntegrationRuntimeLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-DataFactory"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-datalakestore": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4941318Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.DataLakeStore/accounts"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.DataLakeStore/accounts/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Audit",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Requests",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-DataLakeStore"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-dlanalytics": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5323155Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.DataLakeAnalytics/accounts"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Audit",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Requests",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-DLAnalytics"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-eventgridsub": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5589935Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.EventGrid/eventSubscriptions"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-EventGridSub"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-eventgridsystemtopic": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5598921Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.EventGrid/systemTopics"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.EventGrid/systemTopics/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "DeliveryFailures",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-EventGridSystemTopic"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-eventgridtopic": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4975041Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.EventGrid/topics"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.EventGrid/topics/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "DeliveryFailures",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "PublishFailures",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-EventGridTopic"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-eventhub": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:37.839052Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.EventHub/namespaces"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.EventHub/namespaces/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "ArchiveLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "OperationalLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AutoScaleLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "KafkaCoordinatorLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "KafkaUserErrorLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "EventHubVNetConnectionEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "CustomerManagedKeyUserLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-EventHub"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-expressroute": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.590183Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/expressRouteCircuits"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "PeeringRouteLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-ExpressRoute"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-firewall": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4702368Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/azureFirewalls"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "AzureFirewallApplicationRule",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AzureFirewallNetworkRule",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AzureFirewallDnsProxy",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-Firewall"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-frontdoor": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Front Door to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4707789Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/frontDoors"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/frontDoors/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "FrontdoorAccessLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "FrontdoorWebApplicationFirewallLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-FrontDoor"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-function": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5054179Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites"
                        },
                        {
                          "value": "[field('kind')]",
                          "notEquals": "app"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "FunctionAppLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-Function"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-hdinsight": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4748877Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.HDInsight/clusters"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.HDInsight/clusters/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-HDInsight"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-iothub": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5030074Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Devices/IotHubs"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Devices/IotHubs/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Connections",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DeviceTelemetry",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "C2DCommands",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DeviceIdentityOperations",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "FileUploadOperations",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Routes",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "D2CTwinOperations",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "C2DTwinOperations",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "TwinQueries",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "JobsOperations",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DirectMethods",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DistributedTracing",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Configurations",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DeviceStreams",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-iotHub"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-keyvault": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4863409Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.KeyVault/vaults"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "name": "setByPolicy",
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "AuditEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-KeyVault"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-loadbalancer": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.501068Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/loadBalancers"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/loadBalancers/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "timeGrain": null,
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "enabled": false,
                                          "days": 0
                                        }
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "LoadBalancerAlertEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "LoadBalancerProbeHealthStatus",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-LoadBalancer"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-logicappsise": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.6996608Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Logic/integrationAccounts"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Logic/integrationAccounts/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [],
                                    "logs": [
                                      {
                                        "category": "IntegrationAccountTrackingEvents",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-LogicAppsISE"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-logicappswf": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5078255Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Logic/workflows"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Logic/workflows/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "WorkflowRuntime",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-LogicAppsWF"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-mariadb": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.6588825Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.DBforMariaDB/servers"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.DBforMariaDB/servers/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "MySqlSlowLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "MySqlAuditLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-MariaDB"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-mlworkspace": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3442864Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.MachineLearningServices/workspaces"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "Run",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      },
                                      {
                                        "category": "Model",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": true
                                        }
                                      },
                                      {
                                        "category": "Quota",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      },
                                      {
                                        "category": "Resource",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "AmlComputeClusterEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AmlComputeClusterNodeEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AmlComputeJobEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AmlComputeCpuGpuUtilization",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AmlRunStatusChangedEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-MlWorkspace"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-mysql": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5329365Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.DBforMySQL/servers"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.DBforMySQL/servers/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "MySqlSlowLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "MySqlAuditLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-MySQL"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-networksecuritygroups": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4942927Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/networkSecurityGroups"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [],
                                    "logs": [
                                      {
                                        "category": "NetworkSecurityGroupEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "NetworkSecurityGroupRuleCounter",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-NetworkSecurityGroups"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-nic": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5350219Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/networkInterfaces"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/networkInterfaces/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "timeGrain": null,
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "enabled": false,
                                          "days": 0
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-NIC"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-postgresql": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.425534Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.DBforPostgreSQL/servers"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "PostgreSQLLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "QueryStoreRuntimeStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "QueryStoreWaitStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-PostgreSQL"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-powerbiembedded": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5055081Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.PowerBIDedicated/capacities"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Engine",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-PowerBIEmbedded"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-publicip": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5019142Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/publicIPAddresses"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/publicIPAddresses/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "timeGrain": null,
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "enabled": false,
                                          "days": 0
                                        }
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "DDoSProtectionNotifications",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DDoSMitigationFlowLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DDoSMitigationReports",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PublicIP",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-PublicIP"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-recoveryvault": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5205102Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.RecoveryServices/vaults"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allof": [
                            {
                              "count": {
                                "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                                "where": {
                                  "allof": [
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                                      "in": [
                                        "CoreAzureBackup",
                                        "AddonAzureBackupJobs",
                                        "AddonAzureBackupAlerts",
                                        "AddonAzureBackupPolicy",
                                        "AddonAzureBackupStorage",
                                        "AddonAzureBackupProtectedInstance",
                                        "AzureBackupReport"
                                      ]
                                    },
                                    {
                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled",
                                      "equals": "True"
                                    }
                                  ]
                                }
                              },
                              "Equals": 7
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logAnalyticsDestinationType",
                              "equals": "Dedicated"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.RecoveryServices/vaults/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "logAnalyticsDestinationType": "Dedicated",
                                    "metrics": [],
                                    "logs": [
                                      {
                                        "category": "CoreAzureBackup",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AddonAzureBackupAlerts",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AddonAzureBackupJobs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AddonAzureBackupPolicy",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AddonAzureBackupProtectedInstance",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AddonAzureBackupStorage",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AzureBackupReport",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-RecoveryVault"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-rediscache": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:37.909672Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Cache/redis"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Cache/redis/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-RedisCache"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-relay": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Relay to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5406453Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Relay/namespaces"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Relay/namespaces/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "HybridConnectionsEvent",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-Relay"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-searchservices": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4772725Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Search/searchServices"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Search/searchServices/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "OperationLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-SearchServices"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-servicebus": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3295991Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.ServiceBus/namespaces"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.ServiceBus/namespaces/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "OperationalLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-ServiceBus"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-signalr": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for SignalR to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3400149Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.SignalRService/SignalR"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.SignalRService/SignalR/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "AllLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-SignalR"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-sqldbs": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5003655Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "SQLInsights",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AutomaticTuning",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DevOpsOperationsAudit",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "QueryStoreRuntimeStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "QueryStoreWaitStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Errors",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DatabaseWaitStatistics",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Timeouts",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Blocks",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Deadlocks",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SQLSecurityAuditEvents",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('fullName')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-SQLDBs"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-sqlelasticpools": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5194649Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/elasticPools"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('fullName')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-SQLElasticPools"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-sqlmi": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5105366Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Sql/managedInstances/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "logs": [
                                      {
                                        "category": "ResourceUsageStats",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "SQLSecurityAuditEvents",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "DevOpsOperationsAudit",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-SQLMI"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-streamanalytics": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5000485Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.StreamAnalytics/streamingjobs"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Execution",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Authoring",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-StreamAnalytics"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-timeseriesinsights": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:37.8011403Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.TimeSeriesInsights/environments"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "Ingress",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "Management",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-TimeSeriesInsights"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-trafficmanager": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5208939Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/trafficManagerProfiles"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "ProbeHealthStatusEvents",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-TrafficManager"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-virtualnetwork": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.7794633Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworks"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "enabled": false,
                                          "days": 0
                                        }
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "VMProtectionAlerts",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-VirtualNetwork"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-vm": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.0994966Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Compute/virtualMachines/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "enabled": false,
                                          "days": 0
                                        }
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-VM"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-vmss": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5009151Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "enabled": false,
                                          "days": 0
                                        }
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-VMSS"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-vnetgw": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3345103Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/virtualNetworkGateways"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "GatewayDiagnosticLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "IKEDiagnosticLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "P2SDiagnosticLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "RouteDiagnosticLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "RouteDiagnosticLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "TunnelDiagnosticLog",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-VNetGW"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-webserverfarm": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4694696Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Web/serverfarms"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Web/serverfarms/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": []
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-WebServerFarm"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-diagnostics-website": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4710459Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "metricsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable metrics",
                        "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    },
                    "logsEnabled": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Enable logs",
                        "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      },
                      "allowedValues": [
                        "True",
                        "False"
                      ],
                      "defaultValue": "True"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Web/sites"
                        },
                        {
                          "value": "[field('kind')]",
                          "notContains": "functionapp"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Insights/diagnosticSettings",
                        "name": "setByPolicy",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                              "equals": "[parameters('logAnalytics')]"
                            }
                          ]
                        },
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "resourceName": {
                                  "type": "string"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                },
                                "metricsEnabled": {
                                  "type": "string"
                                },
                                "logsEnabled": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                                  "apiVersion": "2017-05-01-preview",
                                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                                  "location": "[parameters('location')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "workspaceId": "[parameters('logAnalytics')]",
                                    "metrics": [
                                      {
                                        "category": "AllMetrics",
                                        "enabled": "[parameters('metricsEnabled')]",
                                        "retentionPolicy": {
                                          "days": 0,
                                          "enabled": false
                                        },
                                        "timeGrain": null
                                      }
                                    ],
                                    "logs": [
                                      {
                                        "category": "AppServiceAntivirusScanAuditLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServiceHTTPLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServiceConsoleLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServiceHTTPLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServiceAppLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServiceFileAuditLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServiceAuditLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServiceIPSecAuditLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      },
                                      {
                                        "category": "AppServicePlatformLogs",
                                        "enabled": "[parameters('logsEnabled')]"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "resourceName": {
                                "value": "[field('name')]"
                              },
                              "profileName": {
                                "value": "[parameters('profileName')]"
                              },
                              "metricsEnabled": {
                                "value": "[parameters('metricsEnabled')]"
                              },
                              "logsEnabled": {
                                "value": "[parameters('logsEnabled')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Diagnostics-Website"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-dnszonegroup-for-blob-privateendpoint": {
                "properties": {
                  "displayName": "Deploy DNS Zone Group for Storage-Blob Private Endpoint",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5480105Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "privateDnsZoneId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "privateDnsZoneId",
                        "strongType": "Microsoft.Network/privateDnsZones"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/privateEndpoints"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "where": {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "blob"
                            }
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "privateDnsZoneId": {
                                  "type": "string"
                                },
                                "privateEndpointName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                  "apiVersion": "2020-03-01",
                                  "location": "[parameters('location')]",
                                  "properties": {
                                    "privateDnsZoneConfigs": [
                                      {
                                        "name": "storageBlob-privateDnsZone",
                                        "properties": {
                                          "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "parameters": {
                              "privateDnsZoneId": {
                                "value": "[parameters('privateDnsZoneId')]"
                              },
                              "privateEndpointName": {
                                "value": "[field('name')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-dnszonegroup-for-file-privateendpoint": {
                "properties": {
                  "displayName": "Deploy DNS  Zone Group for Storage-File Private Endpoint",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-File Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.401062Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "privateDnsZoneId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "privateDnsZoneId",
                        "strongType": "Microsoft.Network/privateDnsZones"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/privateEndpoints"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "where": {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "file"
                            }
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "privateDnsZoneId": {
                                  "type": "string"
                                },
                                "privateEndpointName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                  "apiVersion": "2020-03-01",
                                  "location": "[parameters('location')]",
                                  "properties": {
                                    "privateDnsZoneConfigs": [
                                      {
                                        "name": "storageFile-privateDnsZone",
                                        "properties": {
                                          "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "parameters": {
                              "privateDnsZoneId": {
                                "value": "[parameters('privateDnsZoneId')]"
                              },
                              "privateEndpointName": {
                                "value": "[field('name')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-DNSZoneGroup-For-File-PrivateEndpoint"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-dnszonegroup-for-keyvault-privateendpoint": {
                "properties": {
                  "displayName": "Deploy DNS  Zone Group for Key Vault Private Endpoint",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Key Vault Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.584639Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "privateDnsZoneId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "privateDnsZoneId",
                        "strongType": "Microsoft.Network/privateDnsZones"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/privateEndpoints"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "where": {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "vault"
                            }
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "privateDnsZoneId": {
                                  "type": "string"
                                },
                                "privateEndpointName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                  "apiVersion": "2020-03-01",
                                  "location": "[parameters('location')]",
                                  "properties": {
                                    "privateDnsZoneConfigs": [
                                      {
                                        "name": "keyVault-privateDnsZone",
                                        "properties": {
                                          "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "parameters": {
                              "privateDnsZoneId": {
                                "value": "[parameters('privateDnsZoneId')]"
                              },
                              "privateEndpointName": {
                                "value": "[field('name')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-dnszonegroup-for-queue-privateendpoint": {
                "properties": {
                  "displayName": "Deploy DNS  Zone Group for Storage-Queue Private Endpoint",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Queue Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.6688851Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "privateDnsZoneId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "privateDnsZoneId",
                        "strongType": "Microsoft.Network/privateDnsZones"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/privateEndpoints"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "where": {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "queue"
                            }
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "privateDnsZoneId": {
                                  "type": "string"
                                },
                                "privateEndpointName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                  "apiVersion": "2020-03-01",
                                  "location": "[parameters('location')]",
                                  "properties": {
                                    "privateDnsZoneConfigs": [
                                      {
                                        "name": "storageQueue-privateDnsZone",
                                        "properties": {
                                          "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "parameters": {
                              "privateDnsZoneId": {
                                "value": "[parameters('privateDnsZoneId')]"
                              },
                              "privateEndpointName": {
                                "value": "[field('name')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-dnszonegroup-for-sql-privateendpoint": {
                "properties": {
                  "displayName": "Deploy DNS  Zone Group for SQL Private Endpoint",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the configurations of a Private DNS Zone Group by a parameter for SQL Private Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5408129Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "privateDnsZoneId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "privateDnsZoneId",
                        "strongType": "Microsoft.Network/privateDnsZones"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/privateEndpoints"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "where": {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "sqlServer"
                            }
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "privateDnsZoneId": {
                                  "type": "string"
                                },
                                "privateEndpointName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                  "apiVersion": "2020-03-01",
                                  "location": "[parameters('location')]",
                                  "properties": {
                                    "privateDnsZoneConfigs": [
                                      {
                                        "name": "sqlServer-privateDnsZone",
                                        "properties": {
                                          "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "parameters": {
                              "privateDnsZoneId": {
                                "value": "[parameters('privateDnsZoneId')]"
                              },
                              "privateEndpointName": {
                                "value": "[field('name')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-dnszonegroup-for-table-privateendpoint": {
                "properties": {
                  "displayName": "Deploy DNS  Zone Group for Storage-Blob Private Endpoint",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5347224Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "privateDnsZoneId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "privateDnsZoneId",
                        "strongType": "Microsoft.Network/privateDnsZones"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Network/privateEndpoints"
                        },
                        {
                          "count": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "where": {
                              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                              "equals": "table"
                            }
                          },
                          "greaterOrEquals": 1
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                        ],
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "privateDnsZoneId": {
                                  "type": "string"
                                },
                                "privateEndpointName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "name": "[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                  "apiVersion": "2020-03-01",
                                  "location": "[parameters('location')]",
                                  "properties": {
                                    "privateDnsZoneConfigs": [
                                      {
                                        "name": "storageTable-privateDnsZone",
                                        "properties": {
                                          "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "parameters": {
                              "privateDnsZoneId": {
                                "value": "[parameters('privateDnsZoneId')]"
                              },
                              "privateEndpointName": {
                                "value": "[field('name')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-DNSZoneGroup-For-Table-PrivateEndpoint"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-firewallpolicy": {
                "properties": {
                  "displayName": "Deploy Azure Firewall Manager policy in the subscription",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys Azure Firewall Manager policy in subscription where the policy is assigned.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3971533Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "fwpolicy": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "fwpolicy",
                        "description": "Object describing Azure Firewall Policy"
                      },
                      "defaultValue": {}
                    },
                    "fwPolicyRegion": {
                      "type": "String",
                      "metadata": {
                        "displayName": "fwPolicyRegion",
                        "description": "Select Azure region for Azure Firewall Policy",
                        "strongType": "location"
                      }
                    },
                    "rgName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "rgName",
                        "description": "Provide name for resource group."
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/firewallPolicies",
                        "deploymentScope": "Subscription",
                        "existenceScope": "ResourceGroup",
                        "resourceGroupName": "[parameters('rgName')]",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                        ],
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "rgName": {
                                "value": "[parameters('rgName')]"
                              },
                              "fwPolicy": {
                                "value": "[parameters('fwPolicy')]"
                              },
                              "fwPolicyRegion": {
                                "value": "[parameters('fwPolicyRegion')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "rgName": {
                                  "type": "string"
                                },
                                "fwPolicy": {
                                  "type": "object"
                                },
                                "fwPolicyRegion": {
                                  "type": "string"
                                }
                              },
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/resourceGroups",
                                  "apiVersion": "2018-05-01",
                                  "name": "[parameters('rgName')]",
                                  "location": "[deployment().location]",
                                  "properties": {}
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2018-05-01",
                                  "name": "fwpolicies",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Network/firewallPolicies",
                                          "apiVersion": "2019-09-01",
                                          "name": "[parameters('fwpolicy').firewallPolicyName]",
                                          "location": "[parameters('fwpolicy').location]",
                                          "dependsOn": [],
                                          "tags": {},
                                          "properties": {},
                                          "resources": [
                                            {
                                              "type": "ruleGroups",
                                              "apiVersion": "2019-09-01",
                                              "name": "[parameters('fwpolicy').ruleGroups.name]",
                                              "dependsOn": [
                                                "[resourceId('Microsoft.Network/firewallPolicies',parameters('fwpolicy').firewallPolicyName)]"
                                              ],
                                              "properties": {
                                                "priority": "[parameters('fwpolicy').ruleGroups.properties.priority]",
                                                "rules": "[parameters('fwpolicy').ruleGroups.properties.rules]"
                                              }
                                            }
                                          ]
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-FirewallPolicy"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-hub": {
                "properties": {
                  "displayName": "Deploy Virtual Network to be used as hub virtual network in desired region",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys Virtual Network to be used as hub virtual network in desired region in the subscription where this policy is assigned.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3758037Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "hubName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "hubName",
                        "description": "Name of the Hub"
                      }
                    },
                    "HUB": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "HUB",
                        "description": "Object describing HUB"
                      }
                    },
                    "vpngw": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "vpngw",
                        "description": "Object describing VPN gateway"
                      },
                      "defaultValue": {}
                    },
                    "ergw": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "ergw",
                        "description": "Object describing ExpressRoute gateway"
                      },
                      "defaultValue": {}
                    },
                    "azfw": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "ergw",
                        "description": "Object describing ExpressRoute gateway"
                      },
                      "defaultValue": {}
                    },
                    "rgName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "rgName",
                        "description": "Provide name for resource group."
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/virtualNetworks",
                        "name": "[parameters('hubName')]",
                        "deploymentScope": "Subscription",
                        "existenceScope": "ResourceGroup",
                        "ResourceGroupName": "[parameters('rgName')]",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                        ],
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "rgName": {
                                "value": "[parameters('rgName')]"
                              },
                              "hubName": {
                                "value": "[parameters('hubName')]"
                              },
                              "HUB": {
                                "value": "[parameters('HUB')]"
                              },
                              "vpngw": {
                                "value": "[parameters('vpngw')]"
                              },
                              "ergw": {
                                "value": "[parameters('ergw')]"
                              },
                              "azfw": {
                                "value": "[parameters('azfw')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "hubName": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "Name of the HUB"
                                  }
                                },
                                "HUB": {
                                  "type": "object",
                                  "metadata": {
                                    "description": "Object describing HUB"
                                  }
                                },
                                "vpngw": {
                                  "type": "object",
                                  "defaultValue": {},
                                  "metadata": {
                                    "description": "Object describing VPN gateway"
                                  }
                                },
                                "ergw": {
                                  "type": "object",
                                  "defaultValue": {},
                                  "metadata": {
                                    "description": "Object describing ExpressRoute gateway"
                                  }
                                },
                                "azfw": {
                                  "type": "object",
                                  "defaultValue": {},
                                  "metadata": {
                                    "description": "Object describing the Azure Firewall"
                                  }
                                },
                                "rgName": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "rgName",
                                    "description": "Provide name for resource group."
                                  }
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/resourceGroups",
                                  "apiVersion": "2020-06-01",
                                  "name": "[parameters('rgName')]",
                                  "location": "[deployment().location]",
                                  "properties": {}
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "name": "[concat(parameters('hubName'),'-', parameters('HUB').location)]",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https: //schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "name": "[parameters('hubName')]",
                                          "type": "Microsoft.Network/virtualNetworks",
                                          "apiVersion": "2020-04-01",
                                          "location": "[parameters('HUB').location]",
                                          "properties": {
                                            "addressSpace": {
                                              "addressPrefixes": [
                                                "[parameters('HUB').addressPrefix]"
                                              ]
                                            },
                                            "subnets": [
                                              {
                                                "name": "Infrastructure",
                                                "properties": {
                                                  "addressPrefix": "[if(not(empty(parameters('HUB').subnets.infra)),parameters('HUB').subnets.infra, json('null'))]"
                                                }
                                              },
                                              {
                                                "name": "AzureFirewallSubnet",
                                                "properties": {
                                                  "addressPrefix": "[if(not(empty(parameters('HUB').subnets.azfw)),parameters('HUB').subnets.azfw, json('null'))]"
                                                }
                                              },
                                              {
                                                "name": "GatewaySubnet",
                                                "properties": {
                                                  "addressPrefix": "[if(not(empty(parameters('HUB').subnets.gw)),parameters('HUB').subnets.gw, json('null'))]"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "condition": "[greater(length(parameters('vpngw')),0)]",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[concat(parameters('hubName'),'-', parameters('HUB').location)]"
                                  ],
                                  "name": "[concat(parameters('hubName'),'-vpngw')]",
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "apiVersion": "2020-05-01",
                                          "type": "Microsoft.Network/publicIpAddresses",
                                          "location": "[parameters('HUB').location]",
                                          "name": "[concat(parameters('vpngw').name,'-pip')]",
                                          "properties": {
                                            "publicIPAllocationMethod": "Dynamic"
                                          },
                                          "tags": {}
                                        },
                                        {
                                          "apiVersion": "2020-05-01",
                                          "name": "[parameters('vpngw').name]",
                                          "type": "Microsoft.Network/virtualNetworkGateways",
                                          "location": "[parameters('HUB').location]",
                                          "dependsOn": [
                                            "[concat('Microsoft.Network/publicIPAddresses/', parameters('vpngw').name,'-pip')]"
                                          ],
                                          "tags": {},
                                          "properties": {
                                            "gatewayType": "Vpn",
                                            "vpnType": "[parameters('vpngw').vpnType]",
                                            "ipConfigurations": [
                                              {
                                                "name": "default",
                                                "properties": {
                                                  "privateIPAllocationMethod": "Dynamic",
                                                  "subnet": {
                                                    "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/virtualNetworks/', parameters('hubName'),'/subnets/GatewaySubnet')]"
                                                  },
                                                  "publicIpAddress": {
                                                    "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/publicIPAddresses/', parameters('vpngw').name,'-pip')]"
                                                  }
                                                }
                                              }
                                            ],
                                            "sku": {
                                              "name": "[parameters('vpngw').sku]",
                                              "tier": "[parameters('vpngw').sku]"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "condition": "[greater(length(parameters('ergw')),0)]",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[concat(parameters('hubName'),'-', parameters('HUB').location)]"
                                  ],
                                  "name": "[concat(parameters('hubName'),'-ergw')]",
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "apiVersion": "2020-05-01",
                                          "type": "Microsoft.Network/publicIpAddresses",
                                          "location": "[parameters('HUB').location]",
                                          "name": "[concat(parameters('ergw').name,'-pip')]",
                                          "properties": {
                                            "publicIPAllocationMethod": "Dynamic"
                                          },
                                          "tags": {}
                                        },
                                        {
                                          "apiVersion": "2020-05-01",
                                          "name": "[parameters('ergw').name]",
                                          "type": "Microsoft.Network/virtualNetworkGateways",
                                          "location": "[parameters('HUB').location]",
                                          "dependsOn": [
                                            "[concat('Microsoft.Network/publicIPAddresses/', parameters('ergw').name,'-pip')]"
                                          ],
                                          "tags": {},
                                          "properties": {
                                            "gatewayType": "ExpressRoute",
                                            "ipConfigurations": [
                                              {
                                                "name": "default",
                                                "properties": {
                                                  "privateIPAllocationMethod": "Dynamic",
                                                  "subnet": {
                                                    "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/virtualNetworks/', parameters('hubName'),'/subnets/GatewaySubnet')]"
                                                  },
                                                  "publicIpAddress": {
                                                    "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/publicIPAddresses/', parameters('ergw').name,'-pip')]"
                                                  }
                                                }
                                              }
                                            ],
                                            "sku": {
                                              "name": "[parameters('ergw').sku]",
                                              "tier": "[parameters('ergw').sku]"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "condition": "[greater(length(parameters('azfw')),0)]",
                                  "name": "[concat(parameters('hubName'),'-azfw')]",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[concat(parameters('hubName'),'-', parameters('HUB').location)]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "apiVersion": "2020-05-01",
                                          "type": "Microsoft.Network/publicIpAddresses",
                                          "name": "[concat(parameters('azfw').name,'-pip')]",
                                          "location": "[parameters('azfw').location]",
                                          "sku": {
                                            "name": "Standard"
                                          },
                                          "zones": "[if(contains(parameters('azfw'),'pipZones'),parameters('azfw').pipZones,json('null'))]",
                                          "properties": {
                                            "publicIPAllocationMethod": "Static"
                                          },
                                          "tags": {}
                                        },
                                        {
                                          "apiVersion": "2020-05-01",
                                          "type": "Microsoft.Network/azureFirewalls",
                                          "name": "[parameters('azfw').name]",
                                          "location": "[parameters('azfw').location]",
                                          "zones": "[if(contains(parameters('azfw'),'fwZones'),parameters('azfw').fwZones,json('null'))]",
                                          "dependsOn": [
                                            "[concat(parameters('azfw').name,'-pip')]"
                                          ],
                                          "properties": {
                                            "threatIntelMode": "[parameters('azfw').threatIntelMode]",
                                            "additionalProperties": "[if(contains(parameters('azfw'),'additionalProperties'),parameters('azfw').additionalProperties,json('null'))]",
                                            "sku": "[if(contains(parameters('azfw'),'sku'),parameters('azfw').sku,json('null'))]",
                                            "ipConfigurations": [
                                              {
                                                "name": "[concat(parameters('azfw').name,'-pip')]",
                                                "properties": {
                                                  "subnet": {
                                                    "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/virtualNetworks/', parameters('hubName'),'/subnets/AzureFirewallSubnet')]"
                                                  },
                                                  "publicIPAddress": {
                                                    "id": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'), '/providers','/Microsoft.Network/publicIPAddresses/', parameters('azfw').name,'-pip')]"
                                                  }
                                                }
                                              }
                                            ],
                                            "firewallPolicy": "[if(contains(parameters('azfw'),'firewallPolicy'),parameters('azfw').firewallPolicy,json('null'))]"
                                          },
                                          "tags": {}
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-HUB"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-la-config": {
                "properties": {
                  "displayName": "Deploy the configurations to the Log Analytics in the subscription",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy the configurations to the Log Analytics in the subscription. This includes a list of solutions like update, automation etc and  enables the vminsight counters. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5409206Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "workspaceName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "workspaceName",
                        "description": "Provide name of existing Log Analytics workspace"
                      }
                    },
                    "workspaceRegion": {
                      "type": "String",
                      "metadata": {
                        "displayName": "workspaceRegion",
                        "description": "Select region of existing Log Analytics workspace"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.OperationalInsights/workspaces"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.OperationalInsights/workspaces",
                        "deploymentScope": "resourceGroup",
                        "existenceScope": "Subscription",
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "name",
                              "like": "[parameters('workspaceName')]"
                            },
                            {
                              "field": "location",
                              "equals": "[parameters('workspaceRegion')]"
                            }
                          ]
                        },
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "workspaceName": {
                                "value": "[parameters('workspaceName')]"
                              },
                              "workspaceRegion": {
                                "value": "[parameters('workspaceRegion')]"
                              }
                            },
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "workspaceName": {
                                  "type": "string"
                                },
                                "workspaceRegion": {
                                  "type": "string"
                                }
                              },
                              "variables": {
                                "vmInsightsPerfCounters": {
                                  "windowsArray": [
                                    {
                                      "armName": "counter1",
                                      "objectName": "LogicalDisk",
                                      "counterName": "% Free Space",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter2",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Avg. Disk sec/Read",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter3",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Avg. Disk sec/Transfer",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter4",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Avg. Disk sec/Write",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter5",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Disk Read Bytes/sec",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter6",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Disk Reads/sec",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter7",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Disk Transfers/sec",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter8",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Disk Write Bytes/sec",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter9",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Disk Writes/sec",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter10",
                                      "objectName": "LogicalDisk",
                                      "counterName": "Free Megabytes",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter11",
                                      "objectName": "Memory",
                                      "counterName": "Available MBytes",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter12",
                                      "objectName": "Network Adapter",
                                      "counterName": "Bytes Received/sec",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter13",
                                      "objectName": "Network Adapter",
                                      "counterName": "Bytes Sent/sec",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    },
                                    {
                                      "armName": "counter14",
                                      "objectName": "Processor",
                                      "counterName": "% Processor Time",
                                      "instanceName": "*",
                                      "intervalSeconds": 10
                                    }
                                  ],
                                  "linuxDiskArray": [
                                    {
                                      "counterName": "% Used Inodes"
                                    },
                                    {
                                      "counterName": "Free Megabytes"
                                    },
                                    {
                                      "counterName": "% Used Space"
                                    },
                                    {
                                      "counterName": "Disk Transfers/sec"
                                    },
                                    {
                                      "counterName": "Disk Reads/sec"
                                    },
                                    {
                                      "counterName": "Disk writes/sec"
                                    }
                                  ],
                                  "linuxDiskObject": {
                                    "armResourceName": "Disk",
                                    "objectName": "Logical Disk",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  "linuxMemoryArray": [
                                    {
                                      "counterName": "Available MBytes Memory"
                                    }
                                  ],
                                  "linuxMemoryObject": {
                                    "armResourceName": "Memory",
                                    "objectName": "Memory",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  "linuxNetworkArray": [
                                    {
                                      "counterName": "Total Bytes Received"
                                    },
                                    {
                                      "counterName": "Total Bytes Transmitted"
                                    }
                                  ],
                                  "linuxNetworkObject": {
                                    "armResourceName": "Network",
                                    "objectName": "Network",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  },
                                  "linuxCpuArray": [
                                    {
                                      "counterName": "% Processor Time"
                                    }
                                  ],
                                  "linuxCpuObject": {
                                    "armResourceName": "Processor",
                                    "objectName": "Processor",
                                    "instanceName": "*",
                                    "intervalSeconds": 10
                                  }
                                },
                                "batch1": {
                                  "solutions": [
                                    {
                                      "name": "[concat('Security', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "Security"
                                    },
                                    {
                                      "name": "[concat('AgentHealthAssessment', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "AgentHealthAssessment"
                                    },
                                    {
                                      "name": "[concat('ChangeTracking', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "ChangeTracking"
                                    },
                                    {
                                      "name": "[concat('Updates', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "Updates"
                                    },
                                    {
                                      "name": "[concat('AzureActivity', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "AzureActivity"
                                    },
                                    {
                                      "name": "[concat('AzureAutomation', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "AzureAutomation"
                                    },
                                    {
                                      "name": "[concat('ADAssessment', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "ADAssessment"
                                    },
                                    {
                                      "name": "[concat('SQLAssessment', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "SQLAssessment"
                                    },
                                    {
                                      "name": "[concat('VMInsights', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "VMInsights"
                                    },
                                    {
                                      "name": "[concat('ServiceMap', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "ServiceMap"
                                    },
                                    {
                                      "name": "[concat('SecurityInsights', '(', parameters('workspaceName'), ')')]",
                                      "marketplaceName": "SecurityInsights"
                                    }
                                  ]
                                }
                              },
                              "resources": [
                                {
                                  "apiVersion": "2015-11-01-preview",
                                  "type": "Microsoft.OperationalInsights/workspaces/datasources",
                                  "name": "[concat(parameters('workspaceName'), '/LinuxPerfCollection')]",
                                  "kind": "LinuxPerformanceCollection",
                                  "properties": {
                                    "state": "Enabled"
                                  }
                                },
                                {
                                  "apiVersion": "2015-11-01-preview",
                                  "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                  "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxDiskObject.armResourceName)]",
                                  "kind": "LinuxPerformanceObject",
                                  "properties": {
                                    "performanceCounters": "[variables('vmInsightsPerfCounters').linuxDiskArray]",
                                    "objectName": "[variables('vmInsightsPerfCounters').linuxDiskObject.objectName]",
                                    "instanceName": "[variables('vmInsightsPerfCounters').linuxDiskObject.instanceName]",
                                    "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxDiskObject.intervalSeconds]"
                                  }
                                },
                                {
                                  "apiVersion": "2015-11-01-preview",
                                  "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                  "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxMemoryObject.armResourceName)]",
                                  "kind": "LinuxPerformanceObject",
                                  "properties": {
                                    "performanceCounters": "[variables('vmInsightsPerfCounters').linuxMemoryArray]",
                                    "objectName": "[variables('vmInsightsPerfCounters').linuxMemoryObject.objectName]",
                                    "instanceName": "[variables('vmInsightsPerfCounters').linuxMemoryObject.instanceName]",
                                    "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxMemoryObject.intervalSeconds]"
                                  }
                                },
                                {
                                  "apiVersion": "2015-11-01-preview",
                                  "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                  "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxCpuObject.armResourceName)]",
                                  "kind": "LinuxPerformanceObject",
                                  "properties": {
                                    "performanceCounters": "[variables('vmInsightsPerfCounters').linuxCpuArray]",
                                    "objectName": "[variables('vmInsightsPerfCounters').linuxCpuObject.objectName]",
                                    "instanceName": "[variables('vmInsightsPerfCounters').linuxCpuObject.instanceName]",
                                    "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxCpuObject.intervalSeconds]"
                                  }
                                },
                                {
                                  "apiVersion": "2015-11-01-preview",
                                  "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                  "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').linuxNetworkObject.armResourceName)]",
                                  "kind": "LinuxPerformanceObject",
                                  "properties": {
                                    "performanceCounters": "[variables('vmInsightsPerfCounters').linuxNetworkArray]",
                                    "objectName": "[variables('vmInsightsPerfCounters').linuxNetworkObject.objectName]",
                                    "instanceName": "[variables('vmInsightsPerfCounters').linuxNetworkObject.instanceName]",
                                    "intervalSeconds": "[variables('vmInsightsPerfCounters').linuxNetworkObject.intervalSeconds]"
                                  }
                                },
                                {
                                  "apiVersion": "2015-11-01-preview",
                                  "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                                  "name": "[concat(parameters('workspaceName'), '/', variables('vmInsightsPerfCounters').windowsArray[copyIndex()].armName)]",
                                  "kind": "WindowsPerformanceCounter",
                                  "copy": {
                                    "name": "counterCopy",
                                    "count": "[length(variables('vmInsightsPerfCounters').windowsArray)]"
                                  },
                                  "properties": {
                                    "objectName": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].objectName]",
                                    "instanceName": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].instanceName]",
                                    "intervalSeconds": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].intervalSeconds]",
                                    "counterName": "[variables('vmInsightsPerfCounters').windowsArray[copyIndex()].counterName]"
                                  }
                                },
                                {
                                  "apiVersion": "2015-11-01-preview",
                                  "type": "Microsoft.OperationsManagement/solutions",
                                  "name": "[concat(variables('batch1').solutions[copyIndex()].Name)]",
                                  "location": "[parameters('workspaceRegion')]",
                                  "copy": {
                                    "name": "solutionCopy",
                                    "count": "[length(variables('batch1').solutions)]"
                                  },
                                  "properties": {
                                    "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                  },
                                  "plan": {
                                    "name": "[variables('batch1').solutions[copyIndex()].name]",
                                    "product": "[concat('OMSGallery/', variables('batch1').solutions[copyIndex()].marketplaceName)]",
                                    "promotionCode": "",
                                    "publisher": "Microsoft"
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-LA-Config"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-log-analytics": {
                "properties": {
                  "displayName": "Deploy the Log Analytics in the subscription",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys Log Analytics and Automation account to the subscription where the policy is assigned.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.3910318Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "workspaceName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "workspaceName",
                        "description": "Provide name for log analytics workspace"
                      }
                    },
                    "automationAccountName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "automationAccountName",
                        "description": "Provide name for automation account"
                      }
                    },
                    "workspaceRegion": {
                      "type": "String",
                      "metadata": {
                        "displayName": "workspaceRegion",
                        "description": "Select Azure region for Log Analytics"
                      }
                    },
                    "automationRegion": {
                      "type": "String",
                      "metadata": {
                        "displayName": "automationRegion",
                        "description": "Select Azure region for Automation account"
                      }
                    },
                    "retentionInDays": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Data retention",
                        "description": "Select data retention (days) for Log Analytics."
                      },
                      "defaultValue": "30"
                    },
                    "rgName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "rgName",
                        "description": "Provide name for resource group."
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.OperationalInsights/workspaces",
                        "deploymentScope": "Subscription",
                        "existenceScope": "Subscription",
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "name",
                              "like": "[parameters('workspaceName')]"
                            }
                          ]
                        },
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "rgName": {
                                "value": "[parameters('rgName')]"
                              },
                              "retentionInDays": {
                                "value": "[parameters('retentionInDays')]"
                              },
                              "workspaceName": {
                                "value": "[parameters('workspaceName')]"
                              },
                              "workspaceRegion": {
                                "value": "[parameters('workspaceRegion')]"
                              },
                              "automationAccountName": {
                                "value": "[parameters('automationAccountName')]"
                              },
                              "automationRegion": {
                                "value": "[parameters('automationRegion')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "rgName": {
                                  "type": "string"
                                },
                                "workspaceName": {
                                  "type": "string"
                                },
                                "workspaceRegion": {
                                  "type": "string"
                                },
                                "automationAccountName": {
                                  "type": "string"
                                },
                                "automationRegion": {
                                  "type": "string"
                                },
                                "retentionInDays": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/resourceGroups",
                                  "apiVersion": "2018-05-01",
                                  "name": "[parameters('rgName')]",
                                  "location": "[deployment().location]",
                                  "properties": {}
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2018-05-01",
                                  "name": "log-analytics",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "apiversion": "2015-10-31",
                                          "location": "[parameters('AutomationRegion')]",
                                          "name": "[parameters('AutomationAccountName')]",
                                          "type": "Microsoft.Automation/automationAccounts",
                                          "comments": "Automation account for ",
                                          "properties": {
                                            "sku": {
                                              "name": "OMS"
                                            }
                                          }
                                        },
                                        {
                                          "apiVersion": "2017-03-15-preview",
                                          "location": "[parameters('workspaceRegion')]",
                                          "name": "[parameters('workspaceName')]",
                                          "type": "Microsoft.OperationalInsights/workspaces",
                                          "properties": {
                                            "sku": {
                                              "name": "pernode"
                                            },
                                            "enableLogAccessUsingOnlyResourcePermissions": true,
                                            "retentionInDays": "[int(parameters('retentionInDays'))]"
                                          },
                                          "resources": [
                                            {
                                              "name": "Automation",
                                              "type": "linkedServices",
                                              "apiVersion": "2015-11-01-preview",
                                              "dependsOn": [
                                                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                                                "[resourceId('Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                              ],
                                              "properties": {
                                                "resourceId": "[concat(subscription().id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                              }
                                            }
                                          ]
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Log-Analytics"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-nsg-flowlogs": {
                "properties": {
                  "displayName": "Deploys NSG flow logs and traffic analytics",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4979325Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "retention": {
                      "type": "Integer",
                      "metadata": {
                        "displayName": "Retention"
                      },
                      "defaultValue": 5
                    },
                    "storageAccountResourceId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Storage Account Resource Id",
                        "strongType": "Microsoft.Storage/storageAccounts"
                      }
                    },
                    "trafficAnalyticsInterval": {
                      "type": "Integer",
                      "metadata": {
                        "displayName": "Traffic Analytics processing interval mins (10/60)"
                      },
                      "defaultValue": 60
                    },
                    "flowAnalyticsEnabled": {
                      "type": "Boolean",
                      "metadata": {
                        "displayName": "Enable Traffic Analytics"
                      },
                      "defaultValue": false
                    },
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "strongType": "omsWorkspace",
                        "displayName": "Resource ID of Log Analytics workspace",
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      },
                      "defaultValue": ""
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Network/networkSecurityGroups"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/networkWatchers/flowLogs",
                        "roleDefinitionIds": [
                          "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                        ],
                        "resourceGroupName": "NetworkWatcherRG",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                              "equals": "true"
                            },
                            {
                              "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                              "equals": "[parameters('flowAnalyticsEnabled')]"
                            }
                          ]
                        },
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "networkSecurityGroupName": {
                                "value": "[field('name')]"
                              },
                              "resourceGroupName": {
                                "value": "[resourceGroup().name]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "storageAccountResourceId": {
                                "value": "[parameters('storageAccountResourceId')]"
                              },
                              "retention": {
                                "value": "[parameters('retention')]"
                              },
                              "flowAnalyticsEnabled": {
                                "value": "[parameters('flowAnalyticsEnabled')]"
                              },
                              "trafficAnalyticsInterval": {
                                "value": "[parameters('trafficAnalyticsInterval')]"
                              },
                              "logAnalytics": {
                                "value": "[parameters('logAnalytics')]"
                              }
                            },
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "networkSecurityGroupName": {
                                  "type": "string"
                                },
                                "resourceGroupName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "storageAccountResourceId": {
                                  "type": "string"
                                },
                                "retention": {
                                  "type": "int"
                                },
                                "flowAnalyticsEnabled": {
                                  "type": "bool"
                                },
                                "trafficAnalyticsInterval": {
                                  "type": "int"
                                },
                                "logAnalytics": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Network/networkWatchers/flowLogs",
                                  "apiVersion": "2020-05-01",
                                  "name": "[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]",
                                  "location": "[parameters('location')]",
                                  "properties": {
                                    "targetResourceId": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                                    "storageId": "[parameters('storageAccountResourceId')]",
                                    "enabled": true,
                                    "retentionPolicy": {
                                      "enabled": true,
                                      "days": "[parameters('retention')]"
                                    },
                                    "format": {
                                      "type": "JSON",
                                      "version": 2
                                    },
                                    "flowAnalyticsConfiguration": {
                                      "networkWatcherFlowAnalyticsConfiguration": {
                                        "enabled": "[bool(parameters('flowAnalyticsEnabled'))]",
                                        "trafficAnalyticsInterval": "[parameters('trafficAnalyticsInterval')]",
                                        "workspaceId": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]",
                                        "workspaceRegion": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
                                        "workspaceResourceId": "[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
                                      }
                                    }
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Nsg-FlowLogs"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-sql-auditingsettings": {
                "properties": {
                  "displayName": "Deploy SQL database auditing settings",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy auditing settings to SQL Database when it not exist in the deployment",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:37.9782455Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Sql/servers/databases/auditingSettings",
                        "name": "default",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Sql/servers/databases/auditingSettings/state",
                              "equals": "enabled"
                            },
                            {
                              "field": "Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled",
                              "equals": "true"
                            }
                          ]
                        },
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "location": {
                                  "type": "string"
                                },
                                "sqlServerName": {
                                  "type": "string"
                                },
                                "sqlServerDataBaseName": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "name": "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                                  "type": "Microsoft.Sql/servers/databases/auditingSettings",
                                  "apiVersion": "2017-03-01-preview",
                                  "properties": {
                                    "state": "enabled",
                                    "auditActionsAndGroups": [
                                      "BATCH_COMPLETED_GROUP",
                                      "DATABASE_OBJECT_CHANGE_GROUP",
                                      "SCHEMA_OBJECT_CHANGE_GROUP",
                                      "BACKUP_RESTORE_GROUP",
                                      "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
                                      "DATABASE_PRINCIPAL_CHANGE_GROUP",
                                      "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
                                      "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
                                      "USER_CHANGE_PASSWORD_GROUP",
                                      "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
                                      "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
                                      "DATABASE_PERMISSION_CHANGE_GROUP",
                                      "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
                                      "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                                      "FAILED_DATABASE_AUTHENTICATION_GROUP"
                                    ],
                                    "isAzureMonitorTargetEnabled": true
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "location": {
                                "value": "[field('location')]"
                              },
                              "sqlServerName": {
                                "value": "[first(split(field('fullname'),'/'))]"
                              },
                              "sqlServerDataBaseName": {
                                "value": "[field('name')]"
                              }
                            }
                          }
                        },
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                        ]
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Sql-AuditingSettings"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-sql-securityalertpolicies": {
                "properties": {
                  "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4946469Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Sql/servers/databases/securityAlertPolicies/state",
                              "equals": "Enabled"
                            }
                          ]
                        },
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "location": {
                                  "type": "string"
                                },
                                "sqlServerName": {
                                  "type": "string"
                                },
                                "sqlServerDataBaseName": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                                  "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                                  "apiVersion": "2018-06-01-preview",
                                  "properties": {
                                    "state": "Enabled",
                                    "disabledAlerts": [
                                      ""
                                    ],
                                    "emailAddresses": [
                                      "admin@contoso.com"
                                    ],
                                    "emailAccountAdmins": true,
                                    "storageEndpoint": null,
                                    "storageAccountAccessKey": "",
                                    "retentionDays": 0
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "location": {
                                "value": "[field('location')]"
                              },
                              "sqlServerName": {
                                "value": "[first(split(field('fullname'),'/'))]"
                              },
                              "sqlServerDataBaseName": {
                                "value": "[field('name')]"
                              }
                            }
                          }
                        },
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                        ]
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Sql-SecurityAlertPolicies"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-sql-tde": {
                "properties": {
                  "displayName": "Deploy SQL Database Transparent Data Encryption ",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:37.8987432Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Sql/transparentDataEncryption.status",
                              "equals": "Enabled"
                            }
                          ]
                        },
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "location": {
                                  "type": "string"
                                },
                                "sqlServerName": {
                                  "type": "string"
                                },
                                "sqlServerDataBaseName": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "name": "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/current')]",
                                  "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                                  "apiVersion": "2014-04-01",
                                  "properties": {
                                    "status": "Enabled"
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "location": {
                                "value": "[field('location')]"
                              },
                              "sqlServerName": {
                                "value": "[first(split(field('fullname'),'/'))]"
                              },
                              "sqlServerDataBaseName": {
                                "value": "[field('name')]"
                              }
                            }
                          }
                        },
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                        ]
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Sql-Tde"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-sql-vulnerabilityassessments": {
                "properties": {
                  "displayName": "Deploy SQL Database vulnerability Assessments",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4646364Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "vulnerabilityAssessmentsEmail": {
                      "type": "String",
                      "metadata": {
                        "description": "The email address to send alerts",
                        "displayName": "The email address to send alerts"
                      }
                    },
                    "vulnerabilityAssessmentsStorageID": {
                      "type": "String",
                      "metadata": {
                        "description": "The storage account to store assessments",
                        "displayName": "The storage account to store assessments"
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/databases"
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails",
                              "equals": "[parameters('vulnerabilityAssessmentsEmail')]"
                            },
                            {
                              "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled",
                              "equals": true
                            }
                          ]
                        },
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "location": {
                                  "type": "string"
                                },
                                "sqlServerName": {
                                  "type": "string"
                                },
                                "sqlServerDataBaseName": {
                                  "type": "string"
                                },
                                "vulnerabilityAssessmentsEmail": {
                                  "type": "string"
                                },
                                "vulnerabilityAssessmentsStorageID": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                                  "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                                  "apiVersion": "2017-03-01-preview",
                                  "properties": {
                                    "storageContainerPath": "[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') ,  '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]",
                                    "storageAccountAccessKey": "[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                                    "recurringScans": {
                                      "isEnabled": true,
                                      "emailSubscriptionAdmins": false,
                                      "emails": [
                                        "[parameters('vulnerabilityAssessmentsEmail')]"
                                      ]
                                    }
                                  }
                                }
                              ],
                              "outputs": {}
                            },
                            "parameters": {
                              "location": {
                                "value": "[field('location')]"
                              },
                              "sqlServerName": {
                                "value": "[first(split(field('fullname'),'/'))]"
                              },
                              "sqlServerDataBaseName": {
                                "value": "[field('name')]"
                              },
                              "vulnerabilityAssessmentsEmail": {
                                "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                              },
                              "vulnerabilityAssessmentsStorageID": {
                                "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                              }
                            }
                          }
                        },
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                          "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"
                        ]
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Sql-vulnerabilityAssessments"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-vhub": {
                "properties": {
                  "displayName": "Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured.",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured in the desired region. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4945673Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "vwanname": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vwanname",
                        "description": "Name of the Virtual WAN"
                      }
                    },
                    "vHubName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vHubName",
                        "description": "Name of the vHUB"
                      },
                      "defaultValue": ""
                    },
                    "vHUB": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "vHUB",
                        "description": "Object describing Virtual WAN vHUB"
                      }
                    },
                    "vpngw": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "vpngw",
                        "description": "Object describing VPN gateway"
                      },
                      "defaultValue": {}
                    },
                    "ergw": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "ergw",
                        "description": "Object describing ExpressRoute gateway"
                      },
                      "defaultValue": {}
                    },
                    "azfw": {
                      "type": "Object",
                      "metadata": {
                        "displayName": "azfw",
                        "description": "Object describing the Azure Firewall in vHUB"
                      },
                      "defaultValue": {}
                    },
                    "rgName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "rgName",
                        "description": "Provide name for resource group."
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/virtualHubs",
                        "name": "[parameters('vHubName')]",
                        "deploymentScope": "Subscription",
                        "existenceScope": "ResourceGroup",
                        "ResourceGroupName": "[parameters('rgName')]",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                        ],
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "rgName": {
                                "value": "[parameters('rgName')]"
                              },
                              "vwanname": {
                                "value": "[parameters('vwanname')]"
                              },
                              "vHUB": {
                                "value": "[parameters('vHUB')]"
                              },
                              "vpngw": {
                                "value": "[parameters('vpngw')]"
                              },
                              "ergw": {
                                "value": "[parameters('ergw')]"
                              },
                              "azfw": {
                                "value": "[parameters('azfw')]"
                              },
                              "vHUBName": {
                                "value": "[parameters('vHUBName')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "vwanname": {
                                  "type": "string",
                                  "metadata": {
                                    "description": "Name of the Virtual WAN"
                                  }
                                },
                                "vHUB": {
                                  "type": "object",
                                  "metadata": {
                                    "description": "Object describing Virtual WAN vHUB"
                                  }
                                },
                                "vpngw": {
                                  "type": "object",
                                  "defaultValue": {},
                                  "metadata": {
                                    "description": "Object describing VPN gateway"
                                  }
                                },
                                "ergw": {
                                  "type": "object",
                                  "defaultValue": {},
                                  "metadata": {
                                    "description": "Object describing ExpressRoute gateway"
                                  }
                                },
                                "azfw": {
                                  "type": "object",
                                  "defaultValue": {},
                                  "metadata": {
                                    "description": "Object describing the Azure Firewall in vHUB"
                                  }
                                },
                                "rgName": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "rgName",
                                    "description": "Provide name for resource group."
                                  }
                                },
                                "vHUBName": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "vHUBName",
                                    "description": "Name of the vHUB"
                                  }
                                }
                              },
                              "variables": {
                                "vhubsku": "Standard",
                                "vwanresourceid": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'),'/providers/Microsoft.Network/virtualWans/',parameters('vwanname'))]",
                                "vwanhub": "[concat(subscription().id,'/resourceGroups/',parameters('rgName'),'/providers/Microsoft.Network/virtualHubs/',parameters('vHUBName'))]"
                              },
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/resourceGroups",
                                  "apiVersion": "2018-05-01",
                                  "name": "[parameters('rgName')]",
                                  "location": "[deployment().location]",
                                  "properties": {}
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2018-05-01",
                                  "name": "[concat('vHUBdeploy-',parameters('vHUB').location)]",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Network/virtualHubs",
                                          "apiVersion": "2020-05-01",
                                          "location": "[parameters('vHUB').location]",
                                          "name": "[parameters('vHUBname')]",
                                          "properties": {
                                            "virtualWan": {
                                              "id": "[variables('vwanresourceid')]"
                                            },
                                            "addressPrefix": "[parameters('vHUB').addressPrefix]",
                                            "sku": "[variables('vhubsku')]"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2018-05-01",
                                  "condition": "[greater(length(parameters('vpngw')),0)]",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[concat('vHUBdeploy-',parameters('vHUB').location)]"
                                  ],
                                  "name": "[concat(parameters('vHUBName'),'-vpngw')]",
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Network/vpnGateways",
                                          "apiVersion": "2020-05-01",
                                          "location": "[parameters('vHUB').location]",
                                          "name": "[parameters('vpngw').name]",
                                          "properties": {
                                            "virtualHub": {
                                              "id": "[variables('vwanhub')]"
                                            },
                                            "bgpSettings": "[parameters('vpngw').bgpSettings]",
                                            "vpnGatewayScaleUnit": "[parameters('vpngw').vpnGatewayScaleUnit]"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2018-05-01",
                                  "condition": "[greater(length(parameters('ergw')),0)]",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[concat('vHUBdeploy-',parameters('vHUB').location)]"
                                  ],
                                  "name": "[concat(parameters('vHUBName'),'-ergw')]",
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Network/expressRouteGateways",
                                          "apiVersion": "2020-05-01",
                                          "location": "[parameters('vHUB').location]",
                                          "name": "[parameters('ergw').name]",
                                          "properties": {
                                            "virtualHub": {
                                              "id": "[variables('vwanhub')]"
                                            },
                                            "autoScaleConfiguration": "[parameters('ergw').autoScaleConfiguration]"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-vHUB"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-vnet": {
                "properties": {
                  "displayName": "Deploy spoke network with configuration to hub network based on ipam configuration object",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy spoke network with configuration to hub network based on ipam configuration object",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:36.0620342Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "ipam": {
                      "type": "Array",
                      "metadata": {
                        "displayName": "ipam",
                        "description": null
                      },
                      "defaultValue": []
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Resources/resourceGroups",
                        "deploymentScope": "Subscription",
                        "existenceScope": "Subscription",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                        ],
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.Resources/subscriptions/resourceGroups"
                            },
                            {
                              "field": "name",
                              "like": "[concat(subscription().displayName, '-network')]"
                            }
                          ]
                        },
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "ipam": {
                                "value": "[parameters('ipam')]",
                                "defaultValue": []
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "ipam": {
                                  "defaultValue": [
                                    {
                                      "name": "bu1-weu-msx3-vNet1",
                                      "location": "westeurope",
                                      "virtualNetworks": {
                                        "properties": {
                                          "addressSpace": {
                                            "addressPrefixes": [
                                              "10.51.217.0/24"
                                            ]
                                          }
                                        }
                                      },
                                      "networkSecurityGroups": {
                                        "properties": {
                                          "securityRules": []
                                        }
                                      },
                                      "routeTables": {
                                        "properties": {
                                          "routes": []
                                        }
                                      },
                                      "hubVirtualNetworkConnection": {
                                        "vWanVhubResourceId": "/subscriptions/99c2838f-a548-4884-a6e2-38c1f8fb4c0b/resourceGroups/contoso-global-vwan/providers/Microsoft.Network/virtualHubs/contoso-vhub-weu",
                                        "properties": {
                                          "allowHubToRemoteVnetTransit": true,
                                          "allowRemoteVnetToUseHubVnetGateways": false,
                                          "enableInternetSecurity": true
                                        }
                                      }
                                    }
                                  ],
                                  "type": "Array"
                                }
                              },
                              "variables": {
                                "vNetRgName": "[concat(subscription().displayName, '-network')]",
                                "vNetName": "[concat(subscription().displayName, '-vNet')]",
                                "vNetSubId": "[subscription().subscriptionId]"
                              },
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "name": "[concat('es-ipam-',subscription().displayName,'-RG-',copyIndex())]",
                                  "location": "[parameters('ipam')[copyIndex()].location]",
                                  "dependsOn": [],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Resources/resourceGroups",
                                          "apiVersion": "2020-06-01",
                                          "name": "[variables('vNetRgName')]",
                                          "location": "[parameters('ipam')[copyIndex()].location]",
                                          "properties": {}
                                        },
                                        {
                                          "type": "Microsoft.Resources/resourceGroups",
                                          "apiVersion": "2020-06-01",
                                          "name": "NetworkWatcherRG",
                                          "location": "[parameters('ipam')[copyIndex()].location]",
                                          "properties": {}
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  },
                                  "copy": {
                                    "name": "ipam-rg-loop",
                                    "count": "[length(parameters('ipam'))]"
                                  },
                                  "condition": "[if(and(not(empty(parameters('ipam'))), equals(toLower(parameters('ipam')[copyIndex()].name),toLower(variables('vNetName')))),bool('true'),bool('false'))]"
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "name": "[concat('es-ipam-',subscription().displayName,'-nsg-udr-vnet-hub-vwan-peering-',copyIndex())]",
                                  "dependsOn": [
                                    "[concat('es-ipam-',subscription().displayName,'-RG-',copyIndex())]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "condition": "[contains(parameters('ipam')[copyIndex()],'networkSecurityGroups')]",
                                          "apiVersion": "2020-05-01",
                                          "type": "Microsoft.Network/networkSecurityGroups",
                                          "name": "[concat(subscription().displayName, '-nsg')]",
                                          "location": "[parameters('ipam')[copyIndex()].location]",
                                          "properties": "[if(contains(parameters('ipam')[copyIndex()],'networkSecurityGroups'),parameters('ipam')[copyIndex()].networkSecurityGroups.properties,json('null'))]"
                                        },
                                        {
                                          "condition": "[contains(parameters('ipam')[copyIndex()],'routeTables')]",
                                          "apiVersion": "2020-05-01",
                                          "type": "Microsoft.Network/routeTables",
                                          "name": "[concat(subscription().displayName, '-udr')]",
                                          "location": "[parameters('ipam')[copyIndex()].location]",
                                          "properties": "[if(contains(parameters('ipam')[copyIndex()],'routeTables'),parameters('ipam')[copyIndex()].routeTables.properties,json('null'))]"
                                        },
                                        {
                                          "condition": "[contains(parameters('ipam')[copyIndex()],'virtualNetworks')]",
                                          "type": "Microsoft.Network/virtualNetworks",
                                          "apiVersion": "2020-05-01",
                                          "name": "[concat(subscription().displayName, '-vnet')]",
                                          "location": "[parameters('ipam')[copyIndex()].location]",
                                          "dependsOn": [
                                            "[concat(subscription().displayName, '-nsg')]",
                                            "[concat(subscription().displayName, '-udr')]"
                                          ],
                                          "properties": "[if(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),parameters('ipam')[copyIndex()].virtualNetworks.properties,json('null'))]"
                                        },
                                        {
                                          "condition": "[contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings')]",
                                          "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                          "apiVersion": "2020-05-01",
                                          "name": "[concat(variables('vNetName'), '/peerToHub')]",
                                          "dependsOn": [
                                            "[concat(subscription().displayName, '-vnet')]"
                                          ],
                                          "properties": "[if(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties,json('null'))]"
                                        },
                                        {
                                          "condition": "[and(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId'))]",
                                          "type": "Microsoft.Resources/deployments",
                                          "apiVersion": "2020-06-01",
                                          "name": "[concat('es-ipam-vWan-',subscription().displayName,'-peering-',copyIndex())]",
                                          "subscriptionId": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[2],json('null'))]",
                                          "resourceGroup": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[4],json('null'))]",
                                          "dependsOn": [
                                            "[concat(subscription().displayName, '-vnet')]"
                                          ],
                                          "properties": {
                                            "mode": "Incremental",
                                            "expressionEvaluationOptions": {
                                              "scope": "inner"
                                            },
                                            "template": {
                                              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                              "contentVersion": "1.0.0.0",
                                              "parameters": {
                                                "remoteVirtualNetwork": {
                                                  "type": "string"
                                                },
                                                "vWanVhubName": {
                                                  "Type": "string",
                                                  "defaultValue": ""
                                                },
                                                "allowHubToRemoteVnetTransit": {
                                                  "Type": "bool",
                                                  "defaultValue": true
                                                },
                                                "allowRemoteVnetToUseHubVnetGateways": {
                                                  "Type": "bool",
                                                  "defaultValue": false
                                                },
                                                "enableInternetSecurity": {
                                                  "Type": "bool",
                                                  "defaultValue": true
                                                }
                                              },
                                              "variables": {},
                                              "resources": [
                                                {
                                                  "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
                                                  "apiVersion": "2020-05-01",
                                                  "name": "[[concat(parameters('vWanVhubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                  "properties": {
                                                    "remoteVirtualNetwork": {
                                                      "id": "[[parameters('remoteVirtualNetwork')]"
                                                    },
                                                    "allowHubToRemoteVnetTransit": "[[parameters('allowHubToRemoteVnetTransit')]",
                                                    "allowRemoteVnetToUseHubVnetGateways": "[[parameters('allowRemoteVnetToUseHubVnetGateways')]",
                                                    "enableInternetSecurity": "[[parameters('enableInternetSecurity')]"
                                                  }
                                                }
                                              ],
                                              "outputs": {}
                                            },
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "value": "[concat(subscription().id,'/resourceGroups/',variables('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', concat(subscription().displayName, '-vnet'))]"
                                              },
                                              "vWanVhubName": {
                                                "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),split(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,'/')[8],json('null'))]"
                                              },
                                              "allowHubToRemoteVnetTransit": {
                                                "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.allowHubToRemoteVnetTransit,json('null'))]"
                                              },
                                              "allowRemoteVnetToUseHubVnetGateways": {
                                                "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.allowRemoteVnetToUseHubVnetGateways,json('null'))]"
                                              },
                                              "enableInternetSecurity": {
                                                "value": "[if(and(contains(parameters('ipam')[copyIndex()],'hubVirtualNetworkConnection'),contains(parameters('ipam')[copyIndex()].hubVirtualNetworkConnection,'vWanVhubResourceId')),parameters('ipam')[copyIndex()].hubVirtualNetworkConnection.properties.enableInternetSecurity,json('null'))]"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "condition": "[and(contains(parameters('ipam')[copyIndex()],'virtualNetworks'),contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id'))]",
                                          "type": "Microsoft.Resources/deployments",
                                          "apiVersion": "2020-06-01",
                                          "name": "[concat('es-ipam-hub-',subscription().displayName,'-peering-',copyIndex())]",
                                          "subscriptionId": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[2],json('null'))]",
                                          "resourceGroup": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[4],json('null'))]",
                                          "dependsOn": [
                                            "[concat(subscription().displayName, '-vnet')]"
                                          ],
                                          "properties": {
                                            "mode": "Incremental",
                                            "expressionEvaluationOptions": {
                                              "scope": "inner"
                                            },
                                            "template": {
                                              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                              "contentVersion": "1.0.0.0",
                                              "parameters": {
                                                "remoteVirtualNetwork": {
                                                  "Type": "string",
                                                  "defaultValue": false
                                                },
                                                "hubName": {
                                                  "Type": "string",
                                                  "defaultValue": false
                                                }
                                              },
                                              "variables": {},
                                              "resources": [
                                                {
                                                  "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                                  "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                  "apiVersion": "2020-05-01",
                                                  "properties": {
                                                    "allowVirtualNetworkAccess": true,
                                                    "allowForwardedTraffic": true,
                                                    "allowGatewayTransit": true,
                                                    "useRemoteGateways": false,
                                                    "remoteVirtualNetwork": {
                                                      "id": "[[parameters('remoteVirtualNetwork')]"
                                                    }
                                                  }
                                                }
                                              ],
                                              "outputs": {}
                                            },
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "value": "[concat(subscription().id,'/resourceGroups/',variables('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', concat(subscription().displayName, '-vnet'))]"
                                              },
                                              "hubName": {
                                                "value": "[if(and(contains(parameters('ipam')[copyIndex()],'virtualNetworkPeerings'),contains(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,'id')),split(parameters('ipam')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,'/')[8],json('null'))]"
                                              }
                                            }
                                          }
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  },
                                  "resourceGroup": "[variables('vNetRgName')]",
                                  "copy": {
                                    "name": "ipam-loop",
                                    "count": "[length(parameters('ipam'))]"
                                  },
                                  "condition": "[if(and(not(empty(parameters('ipam'))), equals(toLower(parameters('ipam')[copyIndex()].name),toLower(variables('vNetName')))),bool('true'),bool('false'))]"
                                }
                              ],
                              "outputs": {
                                "ipam": {
                                  "condition": "[bool('true')]",
                                  "type": "Int",
                                  "value": "[length(parameters('ipam'))]"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-vNet"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-vnet-hubspoke": {
                "properties": {
                  "displayName": "Deploys virtual network peering to hub",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "This policy deploys virtual network and peer to the hub",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4791767Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "vNetName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vNetName",
                        "description": "Name of the landing zone vNet"
                      }
                    },
                    "vNetRgName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vNetRgName",
                        "description": "Name of the landing zone vNet RG"
                      }
                    },
                    "vNetLocation": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vNetLocation",
                        "description": "Location for the vNet"
                      }
                    },
                    "vNetCidrRange": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vNetCidrRange",
                        "description": "CIDR Range for the vNet"
                      }
                    },
                    "hubResourceId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "hubResourceId",
                        "description": "Resource ID for the HUB vNet"
                      }
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "deployIfNotExists",
                      "details": {
                        "type": "Microsoft.Network/virtualNetworks",
                        "name": "[parameters('vNetName')]",
                        "deploymentScope": "Subscription",
                        "existenceScope": "ResourceGroup",
                        "ResourceGroupName": "[parameters('vNetRgName')]",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                        ],
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "name",
                              "like": "[parameters('vNetName')]"
                            },
                            {
                              "field": "location",
                              "equals": "[parameters('vNetLocation')]"
                            }
                          ]
                        },
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "vNetRgName": {
                                "value": "[parameters('vNetRgName')]"
                              },
                              "vNetName": {
                                "value": "[parameters('vNetName')]"
                              },
                              "vNetLocation": {
                                "value": "[parameters('vNetLocation')]"
                              },
                              "vNetCidrRange": {
                                "value": "[parameters('vNetCidrRange')]"
                              },
                              "hubResourceId": {
                                "value": "[parameters('hubResourceId')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "vNetRgName": {
                                  "type": "string"
                                },
                                "vNetName": {
                                  "type": "string"
                                },
                                "vNetLocation": {
                                  "type": "string"
                                },
                                "vNetCidrRange": {
                                  "type": "string"
                                },
                                "vNetPeerUseRemoteGateway": {
                                  "type": "bool",
                                  "defaultValue": false
                                },
                                "hubResourceId": {
                                  "type": "string"
                                }
                              },
                              "variables": {},
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "name": "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6),'-rg')]",
                                  "location": "[parameters('vNetLocation')]",
                                  "dependsOn": [],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Resources/resourceGroups",
                                          "apiVersion": "2020-06-01",
                                          "name": "[parameters('vNetRgName')]",
                                          "location": "[parameters('vNetLocation')]",
                                          "properties": {}
                                        },
                                        {
                                          "type": "Microsoft.Resources/resourceGroups",
                                          "apiVersion": "2020-06-01",
                                          "name": "NetworkWatcherRG",
                                          "location": "[parameters('vNetLocation')]",
                                          "properties": {}
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  }
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2020-06-01",
                                  "name": "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6))]",
                                  "dependsOn": [
                                    "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6),'-rg')]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "variables": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Network/virtualNetworks",
                                          "apiVersion": "2020-06-01",
                                          "name": "[parameters('vNetName')]",
                                          "location": "[parameters('vNetLocation')]",
                                          "dependsOn": [],
                                          "properties": {
                                            "addressSpace": {
                                              "addressPrefixes": [
                                                "[parameters('vNetCidrRange')]"
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                          "apiVersion": "2020-05-01",
                                          "name": "[concat(parameters('vNetName'), '/peerToHub')]",
                                          "dependsOn": [
                                            "[parameters('vNetName')]"
                                          ],
                                          "properties": {
                                            "remoteVirtualNetwork": {
                                              "id": "[parameters('hubResourceId')]"
                                            },
                                            "allowVirtualNetworkAccess": true,
                                            "allowForwardedTraffic": true,
                                            "allowGatewayTransit": false,
                                            "useRemoteGateways": "[parameters('vNetPeerUseRemoteGateway')]"
                                          }
                                        },
                                        {
                                          "type": "Microsoft.Resources/deployments",
                                          "apiVersion": "2020-06-01",
                                          "name": "[concat('es-lz-hub-',substring(uniqueString(subscription().id),0,6),'-peering')]",
                                          "subscriptionId": "[split(parameters('hubResourceId'),'/')[2]]",
                                          "resourceGroup": "[split(parameters('hubResourceId'),'/')[4]]",
                                          "dependsOn": [
                                            "[parameters('vNetName')]"
                                          ],
                                          "properties": {
                                            "mode": "Incremental",
                                            "expressionEvaluationOptions": {
                                              "scope": "inner"
                                            },
                                            "template": {
                                              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                              "contentVersion": "1.0.0.0",
                                              "parameters": {
                                                "remoteVirtualNetwork": {
                                                  "Type": "string",
                                                  "defaultValue": false
                                                },
                                                "hubName": {
                                                  "Type": "string",
                                                  "defaultValue": false
                                                }
                                              },
                                              "variables": {},
                                              "resources": [
                                                {
                                                  "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                                  "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                                                  "apiVersion": "2020-05-01",
                                                  "properties": {
                                                    "allowVirtualNetworkAccess": true,
                                                    "allowForwardedTraffic": true,
                                                    "allowGatewayTransit": true,
                                                    "useRemoteGateways": false,
                                                    "remoteVirtualNetwork": {
                                                      "id": "[[parameters('remoteVirtualNetwork')]"
                                                    }
                                                  }
                                                }
                                              ],
                                              "outputs": {}
                                            },
                                            "parameters": {
                                              "remoteVirtualNetwork": {
                                                "value": "[concat(subscription().id,'/resourceGroups/',parameters('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
                                              },
                                              "hubName": {
                                                "value": "[split(parameters('hubResourceId'),'/')[8]]"
                                              }
                                            }
                                          }
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  },
                                  "resourceGroup": "[parameters('vNetRgName')]"
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-VNET-HubSpoke"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-vwan": {
                "properties": {
                  "displayName": "Deploy the Virtual WAN in the specific region",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy the Virtual WAN in the specific region.",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.4945187Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "vwanname": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vwanname",
                        "description": "Name of the Virtual WAN"
                      }
                    },
                    "vwanRegion": {
                      "type": "String",
                      "metadata": {
                        "displayName": "vwanRegion",
                        "description": "Select Azure region for Virtual WAN",
                        "strongType": "location"
                      }
                    },
                    "rgName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "rgName",
                        "description": "Provide name for resource group."
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Resources/subscriptions"
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Network/virtualWans",
                        "deploymentScope": "Subscription",
                        "existenceScope": "ResourceGroup",
                        "name": "[parameters('vwanname')]",
                        "resourceGroupName": "[parameters('rgName')]",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                        ],
                        "deployment": {
                          "location": "northeurope",
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "rgName": {
                                "value": "[parameters('rgName')]"
                              },
                              "vwanname": {
                                "value": "[parameters('vwanname')]"
                              },
                              "vwanRegion": {
                                "value": "[parameters('vwanRegion')]"
                              }
                            },
                            "template": {
                              "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "rgName": {
                                  "type": "string"
                                },
                                "vwanname": {
                                  "type": "string"
                                },
                                "vwanRegion": {
                                  "type": "string"
                                }
                              },
                              "variables": {
                                "vwansku": "Standard"
                              },
                              "resources": [
                                {
                                  "type": "Microsoft.Resources/resourceGroups",
                                  "apiVersion": "2018-05-01",
                                  "name": "[parameters('rgName')]",
                                  "location": "[deployment().location]",
                                  "properties": {}
                                },
                                {
                                  "type": "Microsoft.Resources/deployments",
                                  "apiVersion": "2018-05-01",
                                  "name": "vwan",
                                  "resourceGroup": "[parameters('rgName')]",
                                  "dependsOn": [
                                    "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                                  ],
                                  "properties": {
                                    "mode": "Incremental",
                                    "template": {
                                      "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                      "contentVersion": "1.0.0.0",
                                      "parameters": {},
                                      "resources": [
                                        {
                                          "type": "Microsoft.Network/virtualWans",
                                          "apiVersion": "2020-05-01",
                                          "location": "[parameters('vwanRegion')]",
                                          "name": "[parameters('vwanname')]",
                                          "properties": {
                                            "virtualHubs": [],
                                            "vpnSites": [],
                                            "type": "[variables('vwansku')]"
                                          }
                                        }
                                      ],
                                      "outputs": {}
                                    }
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-vWAN"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policydefinitions/deploy-windows-domainjoin": {
                "properties": {
                  "displayName": "Deploy Windows Domain Join Extension with keyvault configuration",
                  "policyType": "Custom",
                  "mode": "All",
                  "description": "Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Guest Configuration",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:38.5257789Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "domainUsername": {
                      "type": "String",
                      "metadata": {
                        "displayName": "domainUsername",
                        "description": null
                      }
                    },
                    "domainPassword": {
                      "type": "String",
                      "metadata": {
                        "displayName": "domainPassword",
                        "description": null
                      }
                    },
                    "domainFQDN": {
                      "type": "String",
                      "metadata": {
                        "displayName": "domainFQDN",
                        "description": null
                      }
                    },
                    "domainOUPath": {
                      "type": "String",
                      "metadata": {
                        "displayName": "domainOUPath",
                        "description": null
                      }
                    },
                    "keyVaultResourceId": {
                      "type": "String",
                      "metadata": {
                        "displayName": "keyVaultResourceId",
                        "description": null
                      }
                    },
                    "effect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Effect",
                        "description": "Enable or disable the execution of the policy"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyRule": {
                    "if": {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "WindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "in": [
                            "2008-R2-SP1",
                            "2008-R2-SP1-smalldisk",
                            "2008-R2-SP1-zhcn",
                            "2012-Datacenter",
                            "2012-datacenter-gensecond",
                            "2012-Datacenter-smalldisk",
                            "2012-datacenter-smalldisk-g2",
                            "2012-Datacenter-zhcn",
                            "2012-datacenter-zhcn-g2",
                            "2012-R2-Datacenter",
                            "2012-r2-datacenter-gensecond",
                            "2012-R2-Datacenter-smalldisk",
                            "2012-r2-datacenter-smalldisk-g2",
                            "2012-R2-Datacenter-zhcn",
                            "2012-r2-datacenter-zhcn-g2",
                            "2016-Datacenter",
                            "2016-datacenter-gensecond",
                            "2016-datacenter-gs",
                            "2016-Datacenter-Server-Core",
                            "2016-datacenter-server-core-g2",
                            "2016-Datacenter-Server-Core-smalldisk",
                            "2016-datacenter-server-core-smalldisk-g2",
                            "2016-Datacenter-smalldisk",
                            "2016-datacenter-smalldisk-g2",
                            "2016-Datacenter-with-Containers",
                            "2016-datacenter-with-containers-g2",
                            "2016-Datacenter-with-RDSH",
                            "2016-Datacenter-zhcn",
                            "2016-datacenter-zhcn-g2",
                            "2019-Datacenter",
                            "2019-Datacenter-Core",
                            "2019-datacenter-core-g2",
                            "2019-Datacenter-Core-smalldisk",
                            "2019-datacenter-core-smalldisk-g2",
                            "2019-Datacenter-Core-with-Containers",
                            "2019-datacenter-core-with-containers-g2",
                            "2019-Datacenter-Core-with-Containers-smalldisk",
                            "2019-datacenter-core-with-containers-smalldisk-g2",
                            "2019-datacenter-gensecond",
                            "2019-datacenter-gs",
                            "2019-Datacenter-smalldisk",
                            "2019-datacenter-smalldisk-g2",
                            "2019-Datacenter-with-Containers",
                            "2019-datacenter-with-containers-g2",
                            "2019-Datacenter-with-Containers-smalldisk",
                            "2019-datacenter-with-containers-smalldisk-g2",
                            "2019-Datacenter-zhcn",
                            "2019-datacenter-zhcn-g2",
                            "Datacenter-Core-1803-with-Containers-smalldisk",
                            "datacenter-core-1803-with-containers-smalldisk-g2",
                            "Datacenter-Core-1809-with-Containers-smalldisk",
                            "datacenter-core-1809-with-containers-smalldisk-g2",
                            "Datacenter-Core-1903-with-Containers-smalldisk",
                            "datacenter-core-1903-with-containers-smalldisk-g2",
                            "datacenter-core-1909-with-containers-smalldisk",
                            "datacenter-core-1909-with-containers-smalldisk-g1",
                            "datacenter-core-1909-with-containers-smalldisk-g2"
                          ]
                        }
                      ]
                    },
                    "then": {
                      "effect": "[parameters('effect')]",
                      "details": {
                        "type": "Microsoft.Compute/virtualMachines/extensions",
                        "roleDefinitionIds": [
                          "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                        ],
                        "existenceCondition": {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachines/extensions/type",
                              "equals": "JsonADDomainExtension"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                              "equals": "Microsoft.Compute"
                            }
                          ]
                        },
                        "deployment": {
                          "properties": {
                            "mode": "incremental",
                            "parameters": {
                              "vmName": {
                                "value": "[field('name')]"
                              },
                              "location": {
                                "value": "[field('location')]"
                              },
                              "domainUsername": {
                                "reference": {
                                  "keyVault": {
                                    "id": "[parameters('keyVaultResourceId')]"
                                  },
                                  "secretName": "[parameters('domainUsername')]"
                                }
                              },
                              "domainPassword": {
                                "reference": {
                                  "keyVault": {
                                    "id": "[parameters('keyVaultResourceId')]"
                                  },
                                  "secretName": "[parameters('domainPassword')]"
                                }
                              },
                              "domainOUPath": {
                                "value": "[parameters('domainOUPath')]"
                              },
                              "domainFQDN": {
                                "value": "[parameters('domainFQDN')]"
                              },
                              "keyVaultResourceId": {
                                "value": "[parameters('keyVaultResourceId')]"
                              }
                            },
                            "template": {
                              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                              "contentVersion": "1.0.0.0",
                              "parameters": {
                                "vmName": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "domainUsername": {
                                  "type": "string"
                                },
                                "domainPassword": {
                                  "type": "securestring"
                                },
                                "domainFQDN": {
                                  "type": "string"
                                },
                                "domainOUPath": {
                                  "type": "string"
                                },
                                "keyVaultResourceId": {
                                  "type": "string"
                                }
                              },
                              "variables": {
                                "domainJoinOptions": 3,
                                "vmName": "[parameters('vmName')]"
                              },
                              "resources": [
                                {
                                  "apiVersion": "2015-06-15",
                                  "type": "Microsoft.Compute/virtualMachines/extensions",
                                  "name": "[concat(variables('vmName'),'/joindomain')]",
                                  "location": "[resourceGroup().location]",
                                  "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "JsonADDomainExtension",
                                    "typeHandlerVersion": "1.3",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                      "Name": "[parameters('domainFQDN')]",
                                      "User": "[parameters('domainUserName')]",
                                      "Restart": "true",
                                      "Options": "[variables('domainJoinOptions')]",
                                      "OUPath": "[parameters('domainOUPath')]"
                                    },
                                    "protectedSettings": {
                                      "Password": "[parameters('domainPassword')]"
                                    }
                                  }
                                }
                              ],
                              "outputs": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin",
                "type": "Microsoft.Authorization/policyDefinitions",
                "name": "Deploy-Windows-DomainJoin"
              }
            },
            "PolicySetDefinitionsCustom": {
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policysetdefinitions/deny-publicendpoints": {
                "properties": {
                  "displayName": "Public network access should be disabled for PAAS services",
                  "policyType": "Custom",
                  "description": "This policy denies creation of Azure PAAS services with exposed public endpoints.  This policy set includes the policy for the following services KeyVault, Storage accounts, AKS, Cosmos, SQL Servers, MariaDB, MySQL and Postgress. ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Network",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:40.4965118Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "CosmosPublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access should be disabled for CosmosDB",
                        "description": "This policy denies that  Cosmos database accounts  are created with out public network access is disabled."
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    },
                    "MariaDBPublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access should be disabled for MariaDB",
                        "description": "This policy denies the creation of Maria DB accounts with exposed public endpoints"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    },
                    "MySQLPublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access should be disabled for MySQL",
                        "description": "This policy denies creation of MySql DB accounts with exposed public endpoints"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    },
                    "PostgreSQLPublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access should be disabled for PostgreSql",
                        "description": "This policy denies creation of Postgre SQL DB accounts with exposed public endpoints"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    },
                    "KeyVaultPublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access should be disabled for KeyVault",
                        "description": "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    },
                    "SqlServerPublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access on Azure SQL Database should be disabled",
                        "description": "This policy denies creation of Sql servers with exposed public endpoints"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    },
                    "StoragePublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access onStorage accounts should be disabled",
                        "description": "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    },
                    "AKSPublicIpDenyEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Public network access on AKS API should be disabled",
                        "description": "This policy denies  the creation of  Azure Kubernetes Service non-private clusters"
                      },
                      "allowedValues": [
                        "Audit",
                        "Deny",
                        "Disabled"
                      ],
                      "defaultValue": "Deny"
                    }
                  },
                  "policyDefinitions": [
                    {
                      "policyDefinitionReferenceId": "CosmosDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('CosmosPublicIpDenyEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "MariaDBDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('MariaDBPublicIpDenyEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "MySQLDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('MySQLPublicIpDenyEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "PostgreSQLDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('PostgreSQLPublicIpDenyEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "KeyVaultDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('KeyVaultPublicIpDenyEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SqlServerDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('SqlServerPublicIpDenyEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "StorageDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('StoragePublicIpDenyEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "AKSDenyPaasPublicIP",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('AKSPublicIpDenyEffect')]"
                        }
                      }
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints",
                "type": "Microsoft.Authorization/policySetDefinitions",
                "name": "Deny-PublicEndpoints"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policysetdefinitions/deploy-diag-loganalytics": {
                "properties": {
                  "displayName": "Deploy Diagnostic Settings to Azure Services",
                  "policyType": "Custom",
                  "description": "This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included ",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "Monitoring",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:40.6946713Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "logAnalytics": {
                      "type": "String",
                      "metadata": {
                        "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                        "displayName": "Log Analytics workspace",
                        "strongType": "omsWorkspace"
                      }
                    },
                    "profileName": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Profile name",
                        "description": "The diagnostic settings profile name"
                      },
                      "defaultValue": "setbypolicy"
                    },
                    "ACILogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled."
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "ACRLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled."
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "AKSLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled."
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "AnalysisServiceLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "APIMgmtLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for API Management to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "ApplicationGatewayLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "AutomationLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Automation to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "BatchLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Batch to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "CDNEndpointsLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "CognitiveServicesLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "CosmosLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "DatabricksLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Databricks to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "DataFactoryLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "DataLakeStoreLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "DataLakeAnalyticsLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "EventGridSubLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "EventGridTopicLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "EventHubLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "EventSystemTopicLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "ExpressRouteLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "FirewallLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "FrontDoorLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Front Door to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "FunctionAppLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "HDInsightLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "IotHubLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "KeyVaultLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "LoadBalancerLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "LogicAppsISELogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "LogicAppsWFLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "MariaDBLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "MlWorkspaceLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "MySQLLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "NetworkSecurityGroupsLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "NetworkNICLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "PostgreSQLLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "PowerBIEmbeddedLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "NetworkPublicIPNicLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "RecoveryVaultLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "RedisCacheLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "RelayLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Relay to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SearchServicesLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "ServiceBusLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SignalRLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for SignalR to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SQLDBsLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SQLElasticPoolsLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SQLMLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "StreamAnalyticsLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "TimeSeriesInsightsLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "TrafficManagerLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "VirtualNetworkLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "VirtualMachinesLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "VMSSLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "VNetGWLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled."
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "AppServiceLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "AppServiceWebappLogAnalyticsEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace",
                        "description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyDefinitions": [
                    {
                      "policyDefinitionReferenceId": "ACIDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('ACILogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "ACRDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('ACRLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "AKSDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('AKSLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "AnalysisServiceDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('AnalysisServiceLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "APIMgmtDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('APIMgmtLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('ApplicationGatewayLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "AutomationDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('AutomationLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "BatchDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('BatchLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "CDNEndpointsDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('CDNEndpointsLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "CognitiveServicesDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('CognitiveServicesLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "CosmosDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('CosmosLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "DatabricksDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('DatabricksLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "DataFactoryDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('DataFactoryLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "DataLakeStoreDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('DataLakeStoreLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('DataLakeAnalyticsLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "EventGridSubDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('EventGridSubLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "EventGridTopicDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('EventGridTopicLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "EventHubDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('EventHubLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "EventSystemTopicDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('EventSystemTopicLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "ExpressRouteDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('ExpressRouteLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "FirewallDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('FirewallLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "FrontDoorDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('FrontDoorLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "FunctionAppDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('FunctionAppLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "HDInsightDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('HDInsightLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "IotHubDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('IotHubLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "KeyVaultDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('KeyVaultLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "LoadBalancerDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('LoadBalancerLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "LogicAppsISEDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('LogicAppsISELogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "LogicAppsWFDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('LogicAppsWFLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "MariaDBDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('MariaDBLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "MlWorkspaceDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('MlWorkspaceLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "MySQLDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('MySQLLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('NetworkSecurityGroupsLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "NetworkNICDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('NetworkNICLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "PostgreSQLDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('PostgreSQLLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('PowerBIEmbeddedLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PublicIP",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('NetworkPublicIPNicLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "RecoveryVaultDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('RecoveryVaultLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "RedisCacheDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('RedisCacheLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "RelayDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('RelayLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SearchServicesDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('SearchServicesLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "ServiceBusDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('ServiceBusLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SignalRDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('SignalRLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SQLDBsDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('SQLDBsLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('SQLElasticPoolsLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SQLMDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('SQLMLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('StreamAnalyticsLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('TimeSeriesInsightsLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "TrafficManagerDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('TrafficManagerLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "VirtualNetworkDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('VirtualNetworkLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "VirtualMachinesDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('VirtualMachinesLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "VMSSDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('VMSSLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "VNetGWDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('VNetGWLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "AppServiceDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('AppServiceLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "AppServiceWebappDeployDiagnosticLogDeployLogAnalytics",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
                      "parameters": {
                        "logAnalytics": {
                          "value": "[parameters('logAnalytics')]"
                        },
                        "effect": {
                          "value": "[parameters('AppServiceWebappLogAnalyticsEffect')]"
                        },
                        "profileName": {
                          "value": "[parameters('profileName')]"
                        }
                      }
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics",
                "type": "Microsoft.Authorization/policySetDefinitions",
                "name": "Deploy-Diag-LogAnalytics"
              },
              "/providers/microsoft.management/managementgroups/esjh/providers/microsoft.authorization/policysetdefinitions/deploy-sql-security": {
                "properties": {
                  "displayName": "Deploy SQL Database built-in SQL security configuration",
                  "policyType": "Custom",
                  "description": "Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment",
                  "metadata": {
                    "version": "1.0.0",
                    "category": "SQL",
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T20:57:40.5004744Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "parameters": {
                    "vulnerabilityAssessmentsEmail": {
                      "type": "String",
                      "metadata": {
                        "description": "The email address to send alerts",
                        "displayName": "The email address to send alerts"
                      }
                    },
                    "vulnerabilityAssessmentsStorageID": {
                      "type": "String",
                      "metadata": {
                        "description": "The storage account ID to store assessments",
                        "displayName": "The storage account ID to store assessments"
                      }
                    },
                    "SqlDbTdeDeploySqlSecurityEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy SQL Database Transparent Data Encryption ",
                        "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
                        "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SqlDbAuditingSettingsDeploySqlSecurityEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy SQL database auditing settings",
                        "description": "Deploy auditing settings to SQL Database when it not exist in the deployment"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    },
                    "SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect": {
                      "type": "String",
                      "metadata": {
                        "displayName": "Deploy SQL Database vulnerability Assessments",
                        "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters"
                      },
                      "allowedValues": [
                        "DeployIfNotExists",
                        "Disabled"
                      ],
                      "defaultValue": "DeployIfNotExists"
                    }
                  },
                  "policyDefinitions": [
                    {
                      "policyDefinitionReferenceId": "SqlDbTdeDeploySqlSecurity",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('SqlDbTdeDeploySqlSecurityEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SqlDbSecurityAlertPoliciesDeploySqlSecurity",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SqlDbAuditingSettingsDeploySqlSecurity",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('SqlDbAuditingSettingsDeploySqlSecurityEffect')]"
                        }
                      }
                    },
                    {
                      "policyDefinitionReferenceId": "SqlDbVulnerabilityAssessmentsDeploySqlSecurity",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
                      "parameters": {
                        "effect": {
                          "value": "[parameters('SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect')]"
                        },
                        "vulnerabilityAssessmentsEmail": {
                          "value": "[parameters('vulnerabilityAssessmentsEmail')]"
                        },
                        "vulnerabilityAssessmentsStorageID": {
                          "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
                        }
                      }
                    }
                  ]
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security",
                "type": "Microsoft.Authorization/policySetDefinitions",
                "name": "Deploy-Sql-Security"
              }
            },
            "BlueprintDefinitions": {},
            "PolicyAssignments": {
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring": {
                "identity": {
                  "principalId": "bd1c4f32-24fc-4dab-9427-b84023210b29",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "ASC-Monitoring",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "description": "ASC-Monitoring",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:45.676203Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-ASC-Monitoring",
                "location": "westeurope"
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Security": {
                "identity": {
                  "principalId": "4cb4c797-237b-4e64-b2cf-66f841700442",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy-ASC-Defender",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Standard",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "parameters": {
                    "pricingTierVms": {
                      "value": "Standard"
                    },
                    "pricingTierSqlServers": {
                      "value": "Standard"
                    },
                    "pricingTierAppServices": {
                      "value": "Standard"
                    },
                    "pricingTierStorageAccounts": {
                      "value": "Standard"
                    },
                    "pricingTierContainerRegistry": {
                      "value": "Standard"
                    },
                    "pricingTierKeyVaults": {
                      "value": "Standard"
                    },
                    "pricingTierKubernetesService": {
                      "value": "Standard"
                    },
                    "pricingTierDns": {
                      "value": "Standard"
                    },
                    "pricingTierArm": {
                      "value": "Standard"
                    }
                  },
                  "description": "Deploy-ASC-Defender",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:47.585589Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Security",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-ASC-Security",
                "location": "westeurope"
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log": {
                "identity": {
                  "principalId": "1691aa06-da2e-43f0-98f9-af12494603a9",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy-AzActivity-Log",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "parameters": {
                    "logAnalytics": {
                      "value": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                    },
                    "logsEnabled": {
                      "value": "True"
                    }
                  },
                  "description": "Deploy-AzActivity-Log",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:47.4845757Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-AzActivity-Log",
                "location": "westeurope"
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring": {
                "identity": {
                  "principalId": "9ed01b2b-9311-41a8-8897-0a329047be49",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy-Linux-Arc-Monitoring",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "parameters": {
                    "logAnalytics": {
                      "value": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                    }
                  },
                  "description": "Deploy-Linux-Arc-Monitoring",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:44.2251978Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-LX-Arc-Monitoring",
                "location": "westeurope"
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag": {
                "identity": {
                  "principalId": "e51576ad-748d-462b-9d70-cb3b03e6c2e6",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy-Resource-Diag",
                  "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "parameters": {
                    "logAnalytics": {
                      "value": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                    }
                  },
                  "description": "Deploy-Resource-Diag",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:44.5414662Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-Resource-Diag",
                "location": "westeurope"
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring": {
                "identity": {
                  "principalId": "065dde0b-5eab-4fce-80ee-ec956e94c498",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy-VM-Monitoring",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "parameters": {
                    "logAnalytics_1": {
                      "value": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                    }
                  },
                  "description": "Deploy-VM-Monitoring v2",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:44.6165779Z",
                    "updatedBy": "c295384a-33d9-475e-abaf-d2fb0274299a",
                    "updatedOn": "2021-07-09T16:04:52.2554549Z"
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VM-Monitoring",
                "location": "westeurope"
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring": {
                "identity": {
                  "principalId": "a3a4908f-b068-455e-a3f5-38cc5e00448f",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy-VMSS-Monitoring",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "parameters": {
                    "logAnalytics_1": {
                      "value": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                    }
                  },
                  "description": "Deploy-VMSS-Monitoring",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:47.3376784Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-VMSS-Monitoring",
                "location": "westeurope"
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring": {
                "identity": {
                  "principalId": "b0bdcb08-09c9-4d9d-957e-963d255e7220",
                  "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                  "type": "SystemAssigned"
                },
                "properties": {
                  "displayName": "Deploy-Windows-Arc-Monitoring",
                  "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203",
                  "scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                  "parameters": {
                    "logAnalytics": {
                      "value": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                    }
                  },
                  "description": "Deploy-Windows-Arc-Monitoring",
                  "metadata": {
                    "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "createdOn": "2021-01-10T21:00:47.1861703Z",
                    "updatedBy": null,
                    "updatedOn": null
                  },
                  "enforcementMode": "Default"
                },
                "id": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring",
                "type": "Microsoft.Authorization/policyAssignments",
                "name": "Deploy-WS-Arc-Monitoring",
                "location": "westeurope"
              }
            },
            "RoleAssignments": {
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/2d361fa3-7bd4-5234-9b12-1f54afa65870": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/2d361fa3-7bd4-5234-9b12-1f54afa65870",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "Deploy-VMSS-Monitoring",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "a3a4908f-b068-455e-a3f5-38cc5e00448f",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/38abf737-131b-52a2-90da-78943675bfed": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/38abf737-131b-52a2-90da-78943675bfed",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "Deploy-WS-Arc-Monitoring",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "b0bdcb08-09c9-4d9d-957e-963d255e7220",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/45afca7b-a696-5947-a47f-960081dd1dbc": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/45afca7b-a696-5947-a47f-960081dd1dbc",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "Deploy-Resource-Diag",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "e51576ad-748d-462b-9d70-cb3b03e6c2e6",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/538e5329-7b5d-511f-8c05-9c7c32dab0bf": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/538e5329-7b5d-511f-8c05-9c7c32dab0bf",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "Deploy-ASC-Security",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "4cb4c797-237b-4e64-b2cf-66f841700442",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/5d92332d-fe07-5cef-9c6b-33e5025d6374": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/5d92332d-fe07-5cef-9c6b-33e5025d6374",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "Deploy-VM-Monitoring",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "065dde0b-5eab-4fce-80ee-ec956e94c498",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/ddc0ff3c-a3d0-5d5b-ba19-116b6572acbf": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/ddc0ff3c-a3d0-5d5b-ba19-116b6572acbf",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "Deploy-LX-Arc-Monitoring",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "9ed01b2b-9311-41a8-8897-0a329047be49",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/e5ac6b58-4f31-5956-9082-78d97ba2453e": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/e5ac6b58-4f31-5956-9082-78d97ba2453e",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "Deploy-AzActivity-Log",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "1691aa06-da2e-43f0-98f9-af12494603a9",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/f8d8ca86-6fdf-4ad5-b801-5e1b3eba3171": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/roleAssignments/f8d8ca86-6fdf-4ad5-b801-5e1b3eba3171",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJH",
                "DisplayName": "ESDeploymentAccount",
                "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                "ObjectType": "User",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              }
            },
            "DiagnosticSettings": {},
            "Subscriptions": {},
            "ManagementGroups": {
              "ESJH-decommissioned": {
                "MgId": "ESJH-decommissioned",
                "MgName": "ESJH-decommissioned",
                "mgParentId": "ESJH",
                "mgParentName": "ESJH",
                "level": "2",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {},
                "RoleAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ESJH-decommissioned/providers/Microsoft.Authorization/roleAssignments/81bb9ace-a96d-47ab-b9a2-8952e655aa0c": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-decommissioned/providers/Microsoft.Authorization/roleAssignments/81bb9ace-a96d-47ab-b9a2-8952e655aa0c",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-decommissioned",
                    "DisplayName": "ESDeploymentAccount",
                    "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "ObjectType": "User",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-decommissioned/providers/Microsoft.Authorization/roleAssignments/9bdf3098-8e69-4e98-bd8c-22b991783b10": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-decommissioned/providers/Microsoft.Authorization/roleAssignments/9bdf3098-8e69-4e98-bd8c-22b991783b10",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-decommissioned",
                    "DisplayName": "Jesse James",
                    "SignInName": "Jesse.James@AzGovViz.onmicrosoft.com",
                    "RoleDefinitionName": "Security Reader",
                    "RoleDefinitionId": "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
                    "ObjectId": "6f71f3b7-98e1-4821-8116-13b41476ef84",
                    "ObjectType": "User",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  }
                },
                "DiagnosticSettings": {},
                "Subscriptions": {},
                "ManagementGroups": {}
              },
              "ESJH-landingzones": {
                "MgId": "ESJH-landingzones",
                "MgName": "ESJH-landingzones",
                "mgParentId": "ESJH",
                "mgParentName": "ESJH",
                "level": "2",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-forwarding": {
                    "properties": {
                      "displayName": "Deny-IP-Forwarding",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "description": "Deny-IP-Forwarding",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:32.8278563Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-forwarding",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-IP-forwarding",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Esc-AKS": {
                    "identity": {
                      "principalId": "1a6d3fe6-53ee-4614-ae0d-b4ab3a30e95a",
                      "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Deny-Privileged-Escalations-AKS",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "parameters": {
                        "effect": {
                          "value": "deny"
                        }
                      },
                      "description": "Deny-Privileged-Escalations-AKS",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:33.8474314Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Esc-AKS",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Priv-Esc-AKS",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Privileged-AKS": {
                    "identity": {
                      "principalId": "00d9e2e7-3b19-45cf-aef2-fafbe217ca4c",
                      "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Deny-Privileged-Containers-AKS",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "parameters": {
                        "effect": {
                          "value": "deny"
                        }
                      },
                      "description": "Deny-Privileged-Containers-AKS",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:33.8564778Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Privileged-AKS",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Privileged-AKS",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-from-internet": {
                    "properties": {
                      "displayName": "Deny-RDP-from-Internet",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "description": "Deny-RDP-from-Internet",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:32.9416336Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-from-internet",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-RDP-from-internet"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http": {
                    "properties": {
                      "displayName": "Enforce-Secure-Storage",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "notScopes": [
                        "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f"
                      ],
                      "parameters": {},
                      "description": "Enforce-Secure-Storage",
                      "metadata": {
                        "parameterScopes": {},
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:32.8285648Z",
                        "updatedBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "updatedOn": "2021-01-25T22:26:59.5739761Z"
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Storage-http",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg": {
                    "properties": {
                      "displayName": "Deny-Subnet-Without-Nsg",
                      "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "description": "Deny-Subnet-Without-Nsg",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:32.8414231Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deny-Subnet-Without-Nsg",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy": {
                    "identity": {
                      "principalId": "fb0a7498-393f-434d-aa93-2acd144f489f",
                      "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Deploy-AKS-Policy",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "description": "Deploy-AKS-Policy",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:37.0610707Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deploy-AKS-Policy",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing": {
                    "identity": {
                      "principalId": "4f3a2551-ea2f-43c6-9623-8950156d19b7",
                      "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Deploy-SQL-Audit",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "description": "Deploy-SQL-Audit",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:36.7738188Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deploy-SQL-DB-Auditing",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup": {
                    "identity": {
                      "principalId": "e2511ca5-bcb3-4dbd-9d91-c18590c2a9d2",
                      "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Deploy-VM-Backup",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "parameters": {},
                      "description": "Deploy-VM-Backup",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:34.0460087Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Deploy-VM-Backup",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-AKS-HTTPS": {
                    "identity": {
                      "principalId": "1ab5bbbc-60c6-45b7-81d8-e5eba8e716dd",
                      "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Enforce-Https-Ingress-AKS",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "parameters": {
                        "effect": {
                          "value": "deny"
                        }
                      },
                      "description": "Enforce-Https-Ingress-AKS",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:33.8454421Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-AKS-HTTPS",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Enforce-AKS-HTTPS",
                    "location": "westeurope"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-SQL-Encryption": {
                    "identity": {
                      "principalId": "34520a11-7b14-46a8-ac34-7d766959460a",
                      "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "displayName": "Deploy-SQL-Security",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                      "description": "Deploy-SQL-Security",
                      "metadata": {
                        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "createdOn": "2021-01-10T20:58:33.8904858Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/policyAssignments/Enforce-SQL-Encryption",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "Enforce-SQL-Encryption",
                    "location": "westeurope"
                  }
                },
                "RoleAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/093ad67e-4eae-4536-aa0b-da4e09b47d88": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/093ad67e-4eae-4536-aa0b-da4e09b47d88",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                    "DisplayName": "ESDeploymentAccount",
                    "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "ObjectType": "User",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/3b6291a1-fc61-41d8-abff-43d04e35be62": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/3b6291a1-fc61-41d8-abff-43d04e35be62",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                    "DisplayName": "3rdPartyStaff",
                    "SignInName": null,
                    "RoleDefinitionName": "Reader",
                    "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                    "ObjectId": "cb036073-f86b-46e1-9726-1eaccb62a678",
                    "ObjectType": "Group",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/3df334e6-61c3-543a-b548-97586caf6d4f": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/3df334e6-61c3-543a-b548-97586caf6d4f",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                    "DisplayName": "Enforce-SQL-Encryption",
                    "SignInName": null,
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "34520a11-7b14-46a8-ac34-7d766959460a",
                    "ObjectType": "ServicePrincipal",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/4f80e55d-446d-5743-a173-5d189d196345": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/4f80e55d-446d-5743-a173-5d189d196345",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                    "DisplayName": "Deploy-AKS-Policy",
                    "SignInName": null,
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "fb0a7498-393f-434d-aa93-2acd144f489f",
                    "ObjectType": "ServicePrincipal",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/70486d4a-1ee2-5f70-bb58-b3bd79840ae5": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/70486d4a-1ee2-5f70-bb58-b3bd79840ae5",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                    "DisplayName": "Deploy-VM-Backup",
                    "SignInName": null,
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "e2511ca5-bcb3-4dbd-9d91-c18590c2a9d2",
                    "ObjectType": "ServicePrincipal",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/8085d5e6-c291-571e-bd96-a2eb4769f9e6": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones/providers/Microsoft.Authorization/roleAssignments/8085d5e6-c291-571e-bd96-a2eb4769f9e6",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-landingzones",
                    "DisplayName": "Deploy-SQL-DB-Auditing",
                    "SignInName": null,
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "4f3a2551-ea2f-43c6-9623-8950156d19b7",
                    "ObjectType": "ServicePrincipal",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  }
                },
                "DiagnosticSettings": {},
                "Subscriptions": {},
                "ManagementGroups": {
                  "ESJH-online": {
                    "MgId": "ESJH-online",
                    "MgName": "ESJH-online",
                    "mgParentId": "ESJH-landingzones",
                    "mgParentName": "ESJH-landingzones",
                    "level": "3",
                    "PolicyDefinitionsCustom": {},
                    "PolicySetDefinitionsCustom": {},
                    "BlueprintDefinitions": {},
                    "PolicyAssignments": {},
                    "RoleAssignments": {
                      "/providers/Microsoft.Management/managementGroups/ESJH-online/providers/Microsoft.Authorization/roleAssignments/06ee6718-e394-4fcf-bbc2-cf358381ff67": {
                        "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-online/providers/Microsoft.Authorization/roleAssignments/06ee6718-e394-4fcf-bbc2-cf358381ff67",
                        "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-online",
                        "DisplayName": "ESDeploymentAccount",
                        "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                        "RoleDefinitionName": "Owner",
                        "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "ObjectType": "User",
                        "CanDelegate": false,
                        "Description": null,
                        "ConditionVersion": null,
                        "Condition": null
                      }
                    },
                    "DiagnosticSettings": {},
                    "Subscriptions": {
                      "4dfa3b56-55bf-4059-802a-24e44a4fb60f": {
                        "SubscriptionName": "landingZone",
                        "SubscriptionQuotaId": "PayAsYouGo_2014-09-01",
                        "SubscriptionState": "Enabled",
                        "SubscriptionTags": [
                          {
                            "Key": "costCenter",
                            "Value": "4711",
                            "Name": "costCenter"
                          },
                          {
                            "Key": "existingtag",
                            "Value": "blaaa",
                            "Name": "existingtag"
                          },
                          {
                            "Key": "testtag",
                            "Value": "testvalue5",
                            "Name": "testtag"
                          },
                          {
                            "Key": "testtag2",
                            "Value": "blub",
                            "Name": "testtag2"
                          }
                        ],
                        "PolicyDefinitionsCustom": {},
                        "PolicySetDefinitionsCustom": {},
                        "BlueprintDefinitions": {},
                        "PolicyAssignments": {
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/policyAssignments/bcdd1466e4fc5114b6e5f13d": {
                            "properties": {
                              "displayName": "testDeprecatedAssignment",
                              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5df82f4f-773a-4a2d-97a2-422a806f1a55",
                              "scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                              "notScopes": [],
                              "parameters": {},
                              "metadata": {
                                "createdBy": "c295384a-33d9-475e-abaf-d2fb0274299a",
                                "createdOn": "2021-07-18T15:09:28.7142586Z",
                                "updatedBy": null,
                                "updatedOn": null
                              },
                              "enforcementMode": "Default",
                              "nonComplianceMessages": []
                            },
                            "id": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/policyAssignments/bcdd1466e4fc5114b6e5f13d",
                            "type": "Microsoft.Authorization/policyAssignments",
                            "name": "bcdd1466e4fc5114b6e5f13d"
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/policyAssignments/bcee1466e4fc4114b5e5f03d": {
                            "properties": {
                              "displayName": "Audit virtual machines without disaster recovery configured",
                              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0015ea4d-51ff-4ce3-8d8c-f3f8f0179a56",
                              "scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                              "notScopes": [],
                              "parameters": {},
                              "metadata": {
                                "assignedBy": "Joe Dalton",
                                "parameterScopes": {},
                                "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
                                "createdOn": "2021-06-16T16:07:53.7184748Z",
                                "updatedBy": null,
                                "updatedOn": null
                              },
                              "enforcementMode": "Default",
                              "nonComplianceMessages": []
                            },
                            "id": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/policyAssignments/bcee1466e4fc4114b5e5f03d",
                            "type": "Microsoft.Authorization/policyAssignments",
                            "name": "bcee1466e4fc4114b5e5f03d"
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter": {
                            "properties": {
                              "displayName": "ASC DataProtection (subscription: 4dfa3b56-55bf-4059-802a-24e44a4fb60f)",
                              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/9cb3cc7a-b39b-4b82-bc89-e5a5d9ff7b97",
                              "scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                              "description": "This policy assignment was automatically created by Azure Security Center",
                              "metadata": {
                                "assignedBy": "Security Center",
                                "createdBy": "9ac4e379-ffb1-4e2c-ac89-3752d019abfd",
                                "createdOn": "2021-01-10T21:02:17.1091982Z",
                                "updatedBy": null,
                                "updatedOn": null
                              },
                              "enforcementMode": "Default"
                            },
                            "id": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter",
                            "type": "Microsoft.Authorization/policyAssignments",
                            "name": "DataProtectionSecurityCenter"
                          }
                        },
                        "RoleAssignments": {
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/06e10e98-b109-40c5-bf73-691605bf66e3": {
                            "RoleAssignmentId": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/06e10e98-b109-40c5-bf73-691605bf66e3",
                            "Scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                            "DisplayName": "group00",
                            "SignInName": null,
                            "RoleDefinitionName": "Reader",
                            "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                            "ObjectId": "c1916fdd-08d8-439e-a329-d540c6f002a8",
                            "ObjectType": "Group",
                            "CanDelegate": false,
                            "Description": null,
                            "ConditionVersion": null,
                            "Condition": null
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/1dd61049-04b7-4058-af49-01f9b83159b2": {
                            "RoleAssignmentId": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/1dd61049-04b7-4058-af49-01f9b83159b2",
                            "Scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                            "DisplayName": "Tag Bert",
                            "SignInName": "TagBert@AzGovViz.onmicrosoft.com",
                            "RoleDefinitionName": "Tag Contributor",
                            "RoleDefinitionId": "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
                            "ObjectId": "9e1643fe-b887-4a53-9071-56801236f719",
                            "ObjectType": "User",
                            "CanDelegate": false,
                            "Description": null,
                            "ConditionVersion": null,
                            "Condition": null
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/2754101a-9df1-48e7-ae2a-836f23710ed7": {
                            "RoleAssignmentId": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/2754101a-9df1-48e7-ae2a-836f23710ed7",
                            "Scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                            "DisplayName": "Jack Dalton",
                            "SignInName": "JackDalton@AzGovViz.onmicrosoft.com",
                            "RoleDefinitionName": "Owner",
                            "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                            "ObjectId": "c64d2776-a210-428f-b54f-a4a5dd7f8ef8",
                            "ObjectType": "User",
                            "CanDelegate": false,
                            "Description": null,
                            "ConditionVersion": null,
                            "Condition": null
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/68463d6a-5bd9-4d2b-8607-cb12a73d3c53": {
                            "RoleAssignmentId": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/68463d6a-5bd9-4d2b-8607-cb12a73d3c53",
                            "Scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                            "DisplayName": "Joe Dalton",
                            "SignInName": "joe.dalton@AzGovViz.onmicrosoft.com",
                            "RoleDefinitionName": "Owner",
                            "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                            "ObjectId": "acf4c68f-7b15-4d70-935b-26116fc2426a",
                            "ObjectType": "User",
                            "CanDelegate": false,
                            "Description": null,
                            "ConditionVersion": null,
                            "Condition": null
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/6bbd9ae3-1189-40bb-8170-7e8674b79159": {
                            "RoleAssignmentId": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/6bbd9ae3-1189-40bb-8170-7e8674b79159",
                            "Scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                            "DisplayName": "group03",
                            "SignInName": null,
                            "RoleDefinitionName": "User Access Administrator",
                            "RoleDefinitionId": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
                            "ObjectId": "e2390190-219f-419f-bdfa-a9f5cc3698cc",
                            "ObjectType": "Group",
                            "CanDelegate": false,
                            "Description": null,
                            "ConditionVersion": null,
                            "Condition": null
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/70e14253-25d3-447f-9356-ac32985062a4": {
                            "RoleAssignmentId": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/70e14253-25d3-447f-9356-ac32985062a4",
                            "Scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                            "DisplayName": "Calamity Jane",
                            "SignInName": "Calamity_Jane_AzGovViz.net#EXT#@AzGovViz.onmicrosoft.com",
                            "RoleDefinitionName": "User Access Administrator",
                            "RoleDefinitionId": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
                            "ObjectId": "43b0f5e7-cb78-4e1a-b3da-1239647dfb74",
                            "ObjectType": "User",
                            "CanDelegate": false,
                            "Description": null,
                            "ConditionVersion": null,
                            "Condition": null
                          },
                          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/79041f69-fb87-4da7-8676-6431f7ad43a8": {
                            "RoleAssignmentId": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f/providers/Microsoft.Authorization/roleAssignments/79041f69-fb87-4da7-8676-6431f7ad43a8",
                            "Scope": "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
                            "DisplayName": "Jolly Jumper",
                            "SignInName": "JollyJumper@AzGovViz.onmicrosoft.com",
                            "RoleDefinitionName": "Monitoring Reader",
                            "RoleDefinitionId": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
                            "ObjectId": "192ff2e5-52de-4c93-b220-f9ced74068b0",
                            "ObjectType": "User",
                            "CanDelegate": false,
                            "Description": null,
                            "ConditionVersion": null,
                            "Condition": null
                          }
                        },
                        "BlueprintAssignments": {},
                        "DiagnosticSettings": {
                          "subscriptionToLa": {
                            "Name": "subscriptionToLa",
                            "Type": "LA",
                            "TargetId": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466",
                            "Settings": [
                              {
                                "Category": "Administrative",
                                "Enabled": true
                              },
                              {
                                "Category": "Security",
                                "Enabled": true
                              },
                              {
                                "Category": "ServiceHealth",
                                "Enabled": true
                              },
                              {
                                "Category": "Alert",
                                "Enabled": true
                              },
                              {
                                "Category": "Recommendation",
                                "Enabled": true
                              },
                              {
                                "Category": "Policy",
                                "Enabled": true
                              },
                              {
                                "Category": "Autoscale",
                                "Enabled": true
                              },
                              {
                                "Category": "ResourceHealth",
                                "Enabled": true
                              }
                            ]
                          }
                        },
                        "ResourceGroups": {}
                      }
                    },
                    "ManagementGroups": {}
                  }
                }
              },
              "ESJH-platform": {
                "MgId": "ESJH-platform",
                "MgName": "ESJH-platform",
                "mgParentId": "ESJH",
                "mgParentName": "ESJH",
                "level": "2",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {},
                "RoleAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ESJH-platform/providers/Microsoft.Authorization/roleAssignments/243cb616-b890-4197-bc2e-98b966ba39f5": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-platform/providers/Microsoft.Authorization/roleAssignments/243cb616-b890-4197-bc2e-98b966ba39f5",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-platform",
                    "DisplayName": "ESDeploymentAccount",
                    "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "ObjectType": "User",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  }
                },
                "DiagnosticSettings": {
                  "mgDiag_ESJH-platform": {
                    "Name": "mgDiag_ESJH-platform",
                    "Type": "LA",
                    "TargetId": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466",
                    "Settings": [
                      {
                        "Category": "Administrative",
                        "Enabled": true
                      },
                      {
                        "Category": "Policy",
                        "Enabled": true
                      }
                    ]
                  }
                },
                "Subscriptions": {},
                "ManagementGroups": {
                  "ESJH-management": {
                    "MgId": "ESJH-management",
                    "MgName": "ESJH-management",
                    "mgParentId": "ESJH-platform",
                    "mgParentName": "ESJH-platform",
                    "level": "3",
                    "PolicyDefinitionsCustom": {},
                    "PolicySetDefinitionsCustom": {},
                    "BlueprintDefinitions": {},
                    "PolicyAssignments": {
                      "/providers/Microsoft.Management/managementGroups/ESJH-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics": {
                        "identity": {
                          "principalId": "2f3b9d0b-e8eb-4197-9cdf-ca6bde5dd3e5",
                          "tenantId": "896470ca-9c6e-4176-9b38-5a655403c638",
                          "type": "SystemAssigned"
                        },
                        "properties": {
                          "displayName": "Deploy-Log-Analytics",
                          "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/ESJH/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics",
                          "scope": "/providers/Microsoft.Management/managementGroups/ESJH-management",
                          "parameters": {
                            "workspaceName": {
                              "value": "ESJH-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                            },
                            "automationAccountName": {
                              "value": "ESJH-a-f28ba982-5ed0-4033-9bdf-e45e4b5df466"
                            },
                            "workspaceRegion": {
                              "value": "westeurope"
                            },
                            "automationRegion": {
                              "value": "westeurope"
                            },
                            "rgName": {
                              "value": "ESJH-mgmt"
                            },
                            "retentionInDays": {
                              "value": "30"
                            }
                          },
                          "description": "Deploy-Log-Analytics",
                          "metadata": {
                            "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                            "createdOn": "2021-01-10T20:58:37.1385183Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default"
                        },
                        "id": "/providers/Microsoft.Management/managementGroups/ESJH-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "Deploy-Log-Analytics",
                        "location": "westeurope"
                      }
                    },
                    "RoleAssignments": {
                      "/providers/Microsoft.Management/managementGroups/ESJH-management/providers/Microsoft.Authorization/roleAssignments/84fb757b-e5ed-44e1-92fa-5d2ed6fe5cd1": {
                        "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-management/providers/Microsoft.Authorization/roleAssignments/84fb757b-e5ed-44e1-92fa-5d2ed6fe5cd1",
                        "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-management",
                        "DisplayName": "ESDeploymentAccount",
                        "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                        "RoleDefinitionName": "Owner",
                        "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "ObjectType": "User",
                        "CanDelegate": false,
                        "Description": null,
                        "ConditionVersion": null,
                        "Condition": null
                      },
                      "/providers/Microsoft.Management/managementGroups/ESJH-management/providers/Microsoft.Authorization/roleAssignments/b95d2309-e3d0-5961-bef8-a3e75deca49a": {
                        "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-management/providers/Microsoft.Authorization/roleAssignments/b95d2309-e3d0-5961-bef8-a3e75deca49a",
                        "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-management",
                        "DisplayName": "Deploy-Log-Analytics",
                        "SignInName": null,
                        "RoleDefinitionName": "Owner",
                        "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        "ObjectId": "2f3b9d0b-e8eb-4197-9cdf-ca6bde5dd3e5",
                        "ObjectType": "ServicePrincipal",
                        "CanDelegate": false,
                        "Description": null,
                        "ConditionVersion": null,
                        "Condition": null
                      }
                    },
                    "DiagnosticSettings": {},
                    "Subscriptions": {
                      "f28ba982-5ed0-4033-9bdf-e45e4b5df466": {
                        "SubscriptionName": "management",
                        "SubscriptionQuotaId": "PayAsYouGo_2014-09-01",
                        "SubscriptionState": "Enabled",
                        "SubscriptionTags": {
                          "Key": "costCenter",
                          "Value": "4876",
                          "Name": "costCenter"
                        },
                        "PolicyDefinitionsCustom": {
                          "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/providers/microsoft.authorization/policydefinitions/4e7e976d-d94c-47a3-a534-392c641cecd8": {
                            "properties": {
                              "displayName": "Create NSG Rule",
                              "policyType": "Custom",
                              "mode": "All",
                              "metadata": {
                                "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
                                "createdOn": "2021-05-18T18:01:38.7866652Z",
                                "updatedBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
                                "updatedOn": "2021-05-18T18:22:00.499589Z",
                                "category": "CUST_NSG"
                              },
                              "parameters": {
                                "name": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "name",
                                    "description": null
                                  }
                                },
                                "protocol": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "protocol",
                                    "description": null
                                  }
                                },
                                "access": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "access",
                                    "description": null
                                  }
                                },
                                "priority": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "priority",
                                    "description": null
                                  }
                                },
                                "direction": {
                                  "type": "String",
                                  "metadata": {
                                    "displayName": "direction",
                                    "description": null
                                  }
                                },
                                "sourcePortRanges": {
                                  "type": "Array",
                                  "metadata": {
                                    "displayName": "sourcePortRanges",
                                    "description": null
                                  }
                                },
                                "destinationPortRanges": {
                                  "type": "Array",
                                  "metadata": {
                                    "displayName": "destinationPortRanges",
                                    "description": null
                                  }
                                },
                                "sourceAddressPrefixes": {
                                  "type": "Array",
                                  "metadata": {
                                    "displayName": "sourceAddressPrefixes",
                                    "description": null
                                  }
                                },
                                "destinationAddressPrefixes": {
                                  "type": "Array",
                                  "metadata": {
                                    "displayName": "destinationAddressPrefixes",
                                    "description": null
                                  }
                                }
                              },
                              "policyRule": {
                                "if": {
                                  "allOf": [
                                    {
                                      "field": "type",
                                      "equals": "Microsoft.Network/networkSecurityGroups"
                                    }
                                  ]
                                },
                                "then": {
                                  "effect": "append",
                                  "details": [
                                    {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
                                      "value": {
                                        "name": "[parameters('name')]",
                                        "properties": {
                                          "protocol": "[parameters('protocol')]",
                                          "sourcePortRange": "[if(equals(length(parameters('sourcePortRanges')), 1), first(parameters('sourcePortRanges')), '')]",
                                          "destinationPortRange": "[if(equals(length(parameters('destinationPortRanges')), 1), first(parameters('destinationPortRanges')), '')]",
                                          "sourceAddressPrefix": "[if(equals(length(parameters('sourceAddressPrefixes')), 1), first(parameters('sourceAddressPrefixes')), '')]",
                                          "destinationAddressPrefix": "[if(equals(length(parameters('destinationAddressPrefixes')), 1), first(parameters('destinationAddressPrefixes')), '')]",
                                          "access": "[parameters('access')]",
                                          "priority": "[parameters('priority')]",
                                          "direction": "[parameters('direction')]",
                                          "sourcePortRanges": "[if(greater(length(parameters('sourcePortRanges')), 1), parameters('sourcePortRanges'), take(parameters('sourcePortRanges'),0))]",
                                          "destinationPortRanges": "[if(greater(length(parameters('destinationPortRanges')), 1), parameters('destinationPortRanges'), take(parameters('destinationPortRanges'),0))]",
                                          "sourceAddressPrefixes": "[if(greater(length(parameters('sourceAddressPrefixes')), 1), parameters('sourceAddressPrefixes'), take(parameters('sourceAddressPrefixes'),0))]",
                                          "destinationAddressPrefixes": "[if(greater(length(parameters('destinationAddressPrefixes')), 1), parameters('destinationAddressPrefixes'), take(parameters('destinationAddressPrefixes'),0))]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "id": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/providers/Microsoft.Authorization/policyDefinitions/4e7e976d-d94c-47a3-a534-392c641cecd8",
                            "type": "Microsoft.Authorization/policyDefinitions",
                            "name": "4e7e976d-d94c-47a3-a534-392c641cecd8"
                          }
                        },
                        "PolicySetDefinitionsCustom": {},
                        "BlueprintDefinitions": {},
                        "PolicyAssignments": {
                          "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter": {
                            "properties": {
                              "displayName": "ASC DataProtection (subscription: f28ba982-5ed0-4033-9bdf-e45e4b5df466)",
                              "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/9cb3cc7a-b39b-4b82-bc89-e5a5d9ff7b97",
                              "scope": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466",
                              "description": "This policy assignment was automatically created by Azure Security Center",
                              "metadata": {
                                "assignedBy": "Security Center",
                                "createdBy": "9ac4e379-ffb1-4e2c-ac89-3752d019abfd",
                                "createdOn": "2021-01-10T21:02:38.3789321Z",
                                "updatedBy": null,
                                "updatedOn": null
                              },
                              "enforcementMode": "Default"
                            },
                            "id": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/providers/Microsoft.Authorization/policyAssignments/DataProtectionSecurityCenter",
                            "type": "Microsoft.Authorization/policyAssignments",
                            "name": "DataProtectionSecurityCenter"
                          }
                        },
                        "RoleAssignments": {},
                        "BlueprintAssignments": {},
                        "DiagnosticSettings": {
                          "subscriptionToLa": {
                            "Name": "subscriptionToLa",
                            "Type": "LA",
                            "TargetId": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourcegroups/esjh-mgmt/providers/microsoft.operationalinsights/workspaces/esjh-la-f28ba982-5ed0-4033-9bdf-e45e4b5df466",
                            "Settings": [
                              {
                                "Category": "Administrative",
                                "Enabled": true
                              },
                              {
                                "Category": "Security",
                                "Enabled": true
                              },
                              {
                                "Category": "ServiceHealth",
                                "Enabled": true
                              },
                              {
                                "Category": "Alert",
                                "Enabled": true
                              },
                              {
                                "Category": "Recommendation",
                                "Enabled": true
                              },
                              {
                                "Category": "Policy",
                                "Enabled": true
                              },
                              {
                                "Category": "Autoscale",
                                "Enabled": true
                              },
                              {
                                "Category": "ResourceHealth",
                                "Enabled": true
                              }
                            ]
                          }
                        },
                        "ResourceGroups": {
                          "NSG": {
                            "RoleAssignments": {
                              "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourceGroups/NSG/providers/Microsoft.Authorization/roleAssignments/1fe0074e-959c-4d3e-9478-9dc99a34062a": {
                                "RoleAssignmentId": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourceGroups/NSG/providers/Microsoft.Authorization/roleAssignments/1fe0074e-959c-4d3e-9478-9dc99a34062a",
                                "Scope": "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466/resourceGroups/NSG",
                                "DisplayName": "user03",
                                "SignInName": "user03@AzGovViz.onmicrosoft.com",
                                "RoleDefinitionName": "Contributor",
                                "RoleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                                "ObjectId": "c472fa07-5319-4f5f-8bcd-00d4162bb8fd",
                                "ObjectType": "User",
                                "CanDelegate": false,
                                "Description": null,
                                "ConditionVersion": null,
                                "Condition": null
                              }
                            }
                          }
                        }
                      }
                    },
                    "ManagementGroups": {}
                  }
                }
              },
              "ESJH-sandboxes": {
                "MgId": "ESJH-sandboxes",
                "MgName": "ESJH-sandboxes",
                "mgParentId": "ESJH",
                "mgParentName": "ESJH",
                "level": "2",
                "PolicyDefinitionsCustom": {},
                "PolicySetDefinitionsCustom": {},
                "BlueprintDefinitions": {},
                "PolicyAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b1": {
                    "properties": {
                      "displayName": "Audit VMs that do not use managed disks",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes",
                      "notScopes": [],
                      "parameters": {},
                      "metadata": {
                        "assignedBy": "Joe Dalton",
                        "parameterScopes": {},
                        "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
                        "createdOn": "2021-05-05T19:52:10.5911318Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default",
                      "nonComplianceMessages": []
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b1",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "8d73a6aa8a0a4ea2b58de2b1"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b2": {
                    "properties": {
                      "displayName": "APA Audit VMs that do not use managed disks",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes",
                      "notScopes": [],
                      "parameters": {},
                      "metadata": {
                        "createdBy": "c295384a-33d9-475e-abaf-d2fb0274299a",
                        "createdOn": "2021-07-06T09:42:48.3206088Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b2",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "8d73a6aa8a0a4ea2b58de2b2"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b3": {
                    "properties": {
                      "displayName": "APA2 Audit VMs that do not use managed disks",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes",
                      "notScopes": [],
                      "parameters": {},
                      "metadata": {
                        "createdBy": "c295384a-33d9-475e-abaf-d2fb0274299a",
                        "createdOn": "2021-07-06T10:32:34.7477229Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b3",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "8d73a6aa8a0a4ea2b58de2b3"
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b4": {
                    "properties": {
                      "displayName": "APA3 Audit VMs that do not use managed disks",
                      "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
                      "scope": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes",
                      "notScopes": [],
                      "parameters": {},
                      "metadata": {
                        "createdBy": "c295384a-33d9-475e-abaf-d2fb0274299a",
                        "createdOn": "2021-07-06T11:59:31.6278094Z",
                        "updatedBy": null,
                        "updatedOn": null
                      },
                      "enforcementMode": "Default"
                    },
                    "id": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/policyAssignments/8d73a6aa8a0a4ea2b58de2b4",
                    "type": "Microsoft.Authorization/policyAssignments",
                    "name": "8d73a6aa8a0a4ea2b58de2b4"
                  }
                },
                "RoleAssignments": {
                  "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/roleAssignments/5c852bb9-bc65-44cb-a7d7-f230589f9c11": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/roleAssignments/5c852bb9-bc65-44cb-a7d7-f230589f9c11",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes",
                    "DisplayName": "ESDeploymentAccount",
                    "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                    "RoleDefinitionName": "Reader",
                    "RoleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                    "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "ObjectType": "User",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  },
                  "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/roleAssignments/5c852bb9-bc65-44cb-a7d7-f230589f9c5f": {
                    "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes/providers/Microsoft.Authorization/roleAssignments/5c852bb9-bc65-44cb-a7d7-f230589f9c5f",
                    "Scope": "/providers/Microsoft.Management/managementGroups/ESJH-sandboxes",
                    "DisplayName": "ESDeploymentAccount",
                    "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                    "RoleDefinitionName": "Owner",
                    "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                    "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                    "ObjectType": "User",
                    "CanDelegate": false,
                    "Description": null,
                    "ConditionVersion": null,
                    "Condition": null
                  }
                },
                "DiagnosticSettings": {},
                "Subscriptions": {},
                "ManagementGroups": {
                  "CUST_T5": {
                    "MgId": "CUST_T5",
                    "MgName": "CUST_T5 atz",
                    "mgParentId": "ESJH-sandboxes",
                    "mgParentName": "ESJH-sandboxes",
                    "level": "3",
                    "PolicyDefinitionsCustom": {},
                    "PolicySetDefinitionsCustom": {},
                    "BlueprintDefinitions": {},
                    "PolicyAssignments": {
                      "/providers/Microsoft.Management/managementGroups/CUST_T5/providers/Microsoft.Authorization/policyAssignments/aa4f4fdfd3b04fb3962a9da9": {
                        "properties": {
                          "displayName": "APA Audit VMs that do not use managed disks",
                          "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
                          "scope": "/providers/Microsoft.Management/managementGroups/CUST_T5",
                          "notScopes": [],
                          "parameters": {},
                          "metadata": {
                            "assignedBy": "Joe Dalton",
                            "parameterScopes": {},
                            "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
                            "createdOn": "2021-07-15T15:16:07.7409875Z",
                            "updatedBy": null,
                            "updatedOn": null
                          },
                          "enforcementMode": "Default",
                          "nonComplianceMessages": []
                        },
                        "id": "/providers/Microsoft.Management/managementGroups/CUST_T5/providers/Microsoft.Authorization/policyAssignments/aa4f4fdfd3b04fb3962a9da9",
                        "type": "Microsoft.Authorization/policyAssignments",
                        "name": "aa4f4fdfd3b04fb3962a9da9"
                      }
                    },
                    "RoleAssignments": {
                      "/providers/Microsoft.Management/managementGroups/CUST_T5/providers/Microsoft.Authorization/roleAssignments/3c72bcce-6116-4d33-9f8a-927083beee40": {
                        "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/CUST_T5/providers/Microsoft.Authorization/roleAssignments/3c72bcce-6116-4d33-9f8a-927083beee40",
                        "Scope": "/providers/Microsoft.Management/managementGroups/CUST_T5",
                        "DisplayName": "ESDeploymentAccount",
                        "SignInName": "ESDeploymentAccount@AzGovViz.onmicrosoft.com",
                        "RoleDefinitionName": "Owner",
                        "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        "ObjectId": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
                        "ObjectType": "User",
                        "CanDelegate": false,
                        "Description": null,
                        "ConditionVersion": null,
                        "Condition": null
                      }
                    },
                    "DiagnosticSettings": {},
                    "Subscriptions": {},
                    "ManagementGroups": {}
                  }
                }
              }
            }
          },
          "ESJHDEV": {
            "MgId": "ESJHDEV",
            "MgName": "ESJHDEV",
            "mgParentId": "896470ca-9c6e-4176-9b38-5a655403c638",
            "mgParentName": "Tenant Root Group",
            "level": "1",
            "PolicyDefinitionsCustom": {},
            "PolicySetDefinitionsCustom": {},
            "BlueprintDefinitions": {},
            "PolicyAssignments": {},
            "RoleAssignments": {
              "/providers/Microsoft.Management/managementGroups/ESJHDEV/providers/Microsoft.Authorization/roleAssignments/983c43f8-1c29-4c73-9816-b69d38226be4": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJHDEV/providers/Microsoft.Authorization/roleAssignments/983c43f8-1c29-4c73-9816-b69d38226be4",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJHDEV",
                "DisplayName": "AzOps",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "c295384a-33d9-475e-abaf-d2fb0274299a",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              }
            },
            "DiagnosticSettings": {},
            "Subscriptions": {},
            "ManagementGroups": {}
          },
          "ESJHQA": {
            "MgId": "ESJHQA",
            "MgName": "ESJHQA",
            "mgParentId": "896470ca-9c6e-4176-9b38-5a655403c638",
            "mgParentName": "Tenant Root Group",
            "level": "1",
            "PolicyDefinitionsCustom": {},
            "PolicySetDefinitionsCustom": {},
            "BlueprintDefinitions": {},
            "PolicyAssignments": {},
            "RoleAssignments": {
              "/providers/Microsoft.Management/managementGroups/ESJHQA/providers/Microsoft.Authorization/roleAssignments/9f1fe9df-5a9c-46ca-b881-154ecd19eaa7": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJHQA/providers/Microsoft.Authorization/roleAssignments/9f1fe9df-5a9c-46ca-b881-154ecd19eaa7",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJHQA",
                "DisplayName": "AzOps",
                "SignInName": null,
                "RoleDefinitionName": "Owner",
                "RoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                "ObjectId": "c295384a-33d9-475e-abaf-d2fb0274299a",
                "ObjectType": "ServicePrincipal",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJHQA/providers/Microsoft.Authorization/roleAssignments/e010f291-49a9-4d4b-be4d-55c6aeb164cd": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJHQA/providers/Microsoft.Authorization/roleAssignments/e010f291-49a9-4d4b-be4d-55c6aeb164cd",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJHQA",
                "DisplayName": "group04NoMembers",
                "SignInName": null,
                "RoleDefinitionName": "Security Reader",
                "RoleDefinitionId": "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
                "ObjectId": "5f90ced2-7d5e-493b-9db6-862b9332e20a",
                "ObjectType": "Group",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              },
              "/providers/Microsoft.Management/managementGroups/ESJHQA/providers/Microsoft.Authorization/roleAssignments/fe935a9c-928f-4dec-aafb-54ecc2642cf3": {
                "RoleAssignmentId": "/providers/Microsoft.Management/managementGroups/ESJHQA/providers/Microsoft.Authorization/roleAssignments/fe935a9c-928f-4dec-aafb-54ecc2642cf3",
                "Scope": "/providers/Microsoft.Management/managementGroups/ESJHQA",
                "DisplayName": "group05OneMemberGroupWithNoMembers",
                "SignInName": null,
                "RoleDefinitionName": "Log Analytics Reader",
                "RoleDefinitionId": "73c42c96-874c-492b-b04d-ab87d138a893",
                "ObjectId": "c57f8838-1603-4932-b3c4-9572feea9173",
                "ObjectType": "Group",
                "CanDelegate": false,
                "Description": null,
                "ConditionVersion": null,
                "Condition": null
              }
            },
            "DiagnosticSettings": {},
            "Subscriptions": {},
            "ManagementGroups": {}
          }
        }
      }
    },
    "CustomRoleDefinitions": {
      "08a2d627-a94e-461e-8350-432b457d00a3": {
        "roleName": "testRole3368",
        "type": "CustomRole",
        "description": "testing only",
        "assignableScopes": [
          "/providers/microsoft.management/managementgroups/esjhdev"
        ],
        "permissions": [
          {
            "actions": [
              "*/read"
            ],
            "notActions": []
          }
        ],
        "createdOn": "2021-08-04T15:36:21.8771946Z",
        "updatedOn": "2021-08-04T15:36:21.8771946Z",
        "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
        "updatedBy": "acf4c68f-7b15-4d70-935b-26116fc2426a"
      },
      "6b44d6da-5658-444e-a36d-ce64b14011ab": {
        "roleName": "CustRole_P_9982_176",
        "type": "CustomRole",
        "description": "Testing procedure 9982_176",
        "assignableScopes": [
          "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466"
        ],
        "permissions": [
          {
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/Delete",
              "Microsoft.Authorization/*/Write",
              "Microsoft.Authorization/elevateAccess/Action",
              "Microsoft.Blueprint/blueprintAssignments/delete"
            ]
          }
        ],
        "createdOn": "2021-05-18T18:03:13.3689603Z",
        "updatedOn": "2021-05-18T18:23:40.930248Z",
        "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
        "updatedBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149"
      },
      "8808ebf9-4602-4635-a9b8-6c0f002695be": {
        "roleName": "Task4638Role",
        "type": "CustomRole",
        "description": "",
        "assignableScopes": [
          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f"
        ],
        "permissions": [
          {
            "actions": [
              "Microsoft.Resources/subscriptions/resourceGroups/read",
              "Microsoft.Resources/subscriptions/resourcegroups/deployments/read",
              "Microsoft.Resources/subscriptions/resourcegroups/deployments/operationstatuses/read",
              "Microsoft.Resources/subscriptions/resourcegroups/deployments/operations/read",
              "Microsoft.Resources/subscriptions/resourcegroups/resources/read"
            ],
            "notActions": []
          }
        ],
        "createdOn": "2021-01-25T22:22:09.7242156Z",
        "updatedOn": "2021-01-25T22:22:09.7242156Z",
        "createdBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149",
        "updatedBy": "b790b1e1-6f46-488b-8c5a-708b0db9a149"
      },
      "f548f1ea-48f1-4a74-9061-b5dacacf514a": {
        "roleName": "testRole3366",
        "type": "CustomRole",
        "description": "test custom role requestId 3366",
        "assignableScopes": [
          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f"
        ],
        "permissions": [
          {
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/Write",
              "Microsoft.Authorization/elevateAccess/Action",
              "Microsoft.Blueprint/blueprintAssignments/write",
              "Microsoft.Blueprint/blueprintAssignments/delete",
              "Microsoft.Compute/galleries/share/action"
            ]
          }
        ],
        "createdOn": "2021-07-18T15:22:38.3553982Z",
        "updatedOn": "2021-07-19T19:45:44.3902957Z",
        "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
        "updatedBy": "c64d2776-a210-428f-b54f-a4a5dd7f8ef8"
      },
      "f7028056-3a12-43ac-a499-0d1844a02240": {
        "roleName": "testRole3367",
        "type": "CustomRole",
        "description": "testing only",
        "assignableScopes": [
          "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466"
        ],
        "permissions": [
          {
            "actions": [
              "*/read"
            ],
            "notActions": []
          }
        ],
        "createdOn": "2021-08-04T15:34:15.7913717Z",
        "updatedOn": "2021-08-04T15:34:15.7913717Z",
        "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
        "updatedBy": "acf4c68f-7b15-4d70-935b-26116fc2426a"
      },
      "fc14b032-e6e8-440b-a328-f55918e8c83e": {
        "roleName": "CustRole_P_9982_178",
        "type": "CustomRole",
        "description": "test role P_9982_178",
        "assignableScopes": [
          "/subscriptions/4dfa3b56-55bf-4059-802a-24e44a4fb60f",
          "/subscriptions/f28ba982-5ed0-4033-9bdf-e45e4b5df466"
        ],
        "permissions": [
          {
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/Write",
              "Microsoft.Authorization/elevateAccess/Action",
              "Microsoft.Blueprint/blueprintAssignments/write",
              "Microsoft.Blueprint/blueprintAssignments/delete",
              "Microsoft.Compute/galleries/share/action"
            ]
          }
        ],
        "createdOn": "2021-06-16T10:10:06.4648517Z",
        "updatedOn": "2021-06-16T10:10:06.4648517Z",
        "createdBy": "acf4c68f-7b15-4d70-935b-26116fc2426a",
        "updatedBy": "acf4c68f-7b15-4d70-935b-26116fc2426a"
      }
    }
  }
}

